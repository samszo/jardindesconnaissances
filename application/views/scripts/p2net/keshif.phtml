<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <title>Explorateur à facette</title>
    <meta charset="utf-8">
    <script type="text/javascript" src="../js/jquery.min.js"></script>
	<script type="text/javascript" src="../js/d3.3.5.5.min.js" charset="utf-8"></script>
    <script type="text/javascript" src="../js/keshif.js" charset="utf-8"></script>
	<script type="text/javascript" src="../js/papaparse.min.js" charset="utf-8"></script>
	<script type="text/javascript" src="../js/moment.min.js" charset="utf-8"></script>

    <link rel="stylesheet" href="../css/keshif.css" type="text/css" />
    <link rel="stylesheet" href="../css/keshifStyle.css" type="text/css" />    
    <link rel="stylesheet" href="../css/font-awesome.css" />
    
    <script type="text/javascript" >
	var jsSource = '../../data/p2net/DONNEES/EcosystemsA/FamiliesEcosystemsAPivot.json';
    function dataLoad(browser){
        $.ajax({
            url: jsSource,
            async: false,
            success: function(data){
                browser.primaryTableName = 'Ecosystems';
                kshf.dt.Ecosystems = [];
                data.forEach(function(v, i){
                	/*
                    "family lenght": 1, 
                    "kind": "A", 
                    "Inventor-Country": "TW", 
                    "Applicant-Country": "TW", 
                    "prior-Date": "2014-07-25", 
                    "country": "TW", 
                    "applicant": "FIVE RIVERS ENTPR CO LTD", 
                    "IPCR4": "A01H", 
                    "IPCR7": "A01H3", 
                    "label": "TW201603700", 
                    "representative": 0, 
                    "year": "2016", 
                    "inventor": "YANG JIE-YUAN"
                    */                    
                    var dt = {};
                    dt.id = i;
                    dt.familyLenght = v['family lenght'];
                    dt.kind = v.kind;
                    dt.InventorCountry = getCountryName(v['Inventor-Country']);
                    dt.ApplicantCountry = getCountryName(v['Applicant-Country']);
                    dt.country = getCountryName(v['country']);
                    dt.PriorDate = new Date(v['prior-Date']);
                    dt.year = new Date(parseInt(v.year),0);
                    dt.applicant = v.applicant;
                    dt.IPCR4 = v.IPCR4;
                    dt.IPCR7 = v.IPCR7;
                    dt.label = v.label;
                    dt.representative = v.representative;
                    kshf.dt.Ecosystems.push(new kshf.Item(dt,'id'));
                });
                browser.loadCharts();
            }
        });
    };    

    $(document).ready( function(){
        resizeBrowser(100,30);
        $(window).resize(function() {
            resizeBrowser(100,30);
            browser.updateLayout();
        });
    		browser = new kshf.Browser({
            domID: "#chart_div",
            categoryTextWidth: 150,
            source: {
                url: jsSource,
                callback: dataLoad
            },
            summaries: [
                {   title: "kind"
                },{ title: "InventorCountry", layout: 'right'
                },{ title: "ApplicantCountry", layout: 'right'
                },{ title: "country", layout: 'right'
                },{ title: "applicant", layout: 'left'
                	
                },{ title: "year", layout: 'bottom',
                    value: function(){ return this.year; }
                }
            ],
            itemDisplay: {
                sortingOpts: "year",
                autoExpandMore: false,
                displayType: "grid",
                maxVisibleItems_Default: 48,
                textSearch: "label",
                recordView: function(){
                    return "<span class='thumbnail'><img class='thumbImg'></span><span class='title'>"+this.label+"</span>";
                },
                visibleCb: function(d){
                    /*
                    d3.select(d.DOM.record).select("img").attr("src",
                        "https://www.googleapis.com/freebase/v1/image/"+d.data.name);
                    */
                }
            }
        });
    });    
    

    function resizeBrowser(minWidth, minHeight){
        if(minWidth) $('#chart_div').width($(window).width()-minWidth);
        if(minHeight) $('#chart_div').height($(window).height()-minHeight);
    };
	// Based on ISO_3166 codes
	function getCountryName(v){
	    switch(v){
	        case 'AD': return "Andorra";
	        case 'AE': return "United Arab Emirates";
	        case 'AF': return "Afghanistan";
	        case 'AG': return "Antigua and Barbuda";
	        case 'AI': return "Anguilla";
	        case 'AL': return "Albania";
	        case 'AM': return "Armenia";
	        case 'AO': return "Angola";
	        case 'AQ': return "Antarctica";
	        case 'AR': return "Argentina";
	        case 'AS': return "American Samoa";
	        case 'AT': return "Austria";
	        case 'AU': return "Australia";
	        case 'AW': return "Aruba";
	        case 'AX': return "Åland Islands";
	        case 'AZ': return "Azerbaijan";
	        case 'BA': return "Bosnia and Herzegovina";
	        case 'BB': return "Barbados";
	        case 'BD': return "Bangladesh";
	        case 'BE': return "Belgium";
	        case 'BF': return "Burkina Faso";
	        case 'BG': return "Bulgaria";
	        case 'BH': return "Bahrain";
	        case 'BI': return "Burundi";
	        case 'BJ': return "Benin";
	        case 'BL': return "Saint Barthélemy";
	        case 'BM': return "Bermuda";
	        case 'BN': return "Brunei Darussalam";
	        case 'BO': return "Bolivia, Plurinational State of";
	        case 'BQ': return "Bonaire, Sint Eustatius and Saba";
	        case 'BR': return "Brazil";
	        case 'BS': return "Bahamas";
	        case 'BT': return "Bhutan";
	        case 'BV': return "Bouvet Island";
	        case 'BW': return "Botswana";
	        case 'BY': return "Belarus";
	        case 'BZ': return "Belize";
	        case 'CA': return "Canada";
	        case 'CC': return "Cocos (Keeling) Islands";
	        case 'CD': return "Congo, the Democratic Republic of the";
	        case 'CF': return "Central African Republic";
	        case 'CG': return "Congo";
	        case 'CH': return "Switzerland";
	        case 'CI': return "Côte d'Ivoire";
	        case 'CK': return "Cook Islands";
	        case 'CL': return "Chile";
	        case 'CM': return "Cameroon";
	        case 'CN': return "China";
	        case 'CO': return "Colombia";
	        case 'CR': return "Costa Rica";
	        case 'CU': return "Cuba";
	        case 'CV': return "Cabo Verde";
	        case 'CW': return "Curaçao";
	        case 'CX': return "Christmas Island";
	        case 'CY': return "Cyprus";
	        case 'CZ': return "Czech Republic";
	        case 'DE': return "Germany";
	        case 'DJ': return "Djibouti";
	        case 'DK': return "Denmark";
	        case 'DM': return "Dominica";
	        case 'DO': return "Dominican Republic";
	        case 'DZ': return "Algeria";
	        case 'EC': return "Ecuador";
	        case 'EE': return "Estonia";
	        case 'EG': return "Egypt";
	        case 'EH': return "Western Sahara";
	        case 'ER': return "Eritrea";
	        case 'ES': return "Spain";
	        case 'ET': return "Ethiopia";
	        case 'FI': return "Finland";
	        case 'FJ': return "Fiji";
	        case 'FK': return "Falkland Islands (Malvinas)";
	        case 'FM': return "Micronesia, Federated States of";
	        case 'FO': return "Faroe Islands";
	        case 'FR': return "France";
	        case 'GA': return "Gabon";
	        case 'GB': return "United Kingdom of Great Britain and Northern Ireland";
	        case 'GD': return "Grenada";
	        case 'GE': return "Georgia";
	        case 'GF': return "French Guiana";
	        case 'GG': return "Guernsey";
	        case 'GH': return "Ghana";
	        case 'GI': return "Gibraltar";
	        case 'GL': return "Greenland";
	        case 'GM': return "Gambia";
	        case 'GN': return "Guinea";
	        case 'GP': return "Guadeloupe";
	        case 'GQ': return "Equatorial Guinea";
	        case 'GR': return "Greece";
	        case 'GS': return "South Georgia and the South Sandwich Islands";
	        case 'GT': return "Guatemala";
	        case 'GU': return "Guam";
	        case 'GW': return "Guinea-Bissau";
	        case 'GY': return "Guyana";
	        case 'HK': return "Hong Kong";
	        case 'HM': return "Heard Island and McDonald Islands";
	        case 'HN': return "Honduras";
	        case 'HR': return "Croatia";
	        case 'HT': return "Haiti";
	        case 'HU': return "Hungary";
	        case 'ID': return "Indonesia";
	        case 'IE': return "Ireland";
	        case 'IL': return "Israel";
	        case 'IM': return "Isle of Man";
	        case 'IN': return "India";
	        case 'IO': return "British Indian Ocean Territory";
	        case 'IQ': return "Iraq";
	        case 'IR': return "Iran, Islamic Republic of";
	        case 'IS': return "Iceland";
	        case 'IT': return "Italy";
	        case 'JE': return "Jersey";
	        case 'JM': return "Jamaica";
	        case 'JO': return "Jordan";
	        case 'JP': return "Japan";
	        case 'KE': return "Kenya";
	        case 'KG': return "Kyrgyzstan";
	        case 'KH': return "Cambodia";
	        case 'KI': return "Kiribati";
	        case 'KM': return "Comoros";
	        case 'KN': return "Saint Kitts and Nevis";
	        case 'KP': return "Korea, Democratic People's Republic of";
	        case 'KR': return "Korea, Republic of";
	        case 'KW': return "Kuwait";
	        case 'KY': return "Cayman Islands";
	        case 'KZ': return "Kazakhstan";
	        case 'LA': return "Lao People's Democratic Republic";
	        case 'LB': return "Lebanon";
	        case 'LC': return "Saint Lucia";
	        case 'LI': return "Liechtenstein";
	        case 'LK': return "Sri Lanka";
	        case 'LR': return "Liberia";
	        case 'LS': return "Lesotho";
	        case 'LT': return "Lithuania";
	        case 'LU': return "Luxembourg";
	        case 'LV': return "Latvia";
	        case 'LY': return "Libya";
	        case 'MA': return "Morocco";
	        case 'MC': return "Monaco";
	        case 'MD': return "Moldova, Republic of";
	        case 'ME': return "Montenegro";
	        case 'MF': return "Saint Martin (French part)";
	        case 'MG': return "Madagascar";
	        case 'MH': return "Marshall Islands";
	        case 'MK': return "Macedonia, the former Yugoslav Republic of";
	        case 'ML': return "Mali";
	        case 'MM': return "Myanmar";
	        case 'MN': return "Mongolia";
	        case 'MO': return "Macao";
	        case 'MP': return "Northern Mariana Islands";
	        case 'MQ': return "Martinique";
	        case 'MR': return "Mauritania";
	        case 'MS': return "Montserrat";
	        case 'MT': return "Malta";
	        case 'MU': return "Mauritius";
	        case 'MV': return "Maldives";
	        case 'MW': return "Malawi";
	        case 'MX': return "Mexico";
	        case 'MY': return "Malaysia";
	        case 'MZ': return "Mozambique";
	        case 'NA': return "Namibia";
	        case 'NC': return "New Caledonia";
	        case 'NE': return "Niger";
	        case 'NF': return "Norfolk Island";
	        case 'NG': return "Nigeria";
	        case 'NI': return "Nicaragua";
	        case 'NL': return "Netherlands";
	        case 'NO': return "Norway";
	        case 'NP': return "Nepal";
	        case 'NR': return "Nauru";
	        case 'NU': return "Niue";
	        case 'NZ': return "New Zealand";
	        case 'OM': return "Oman";
	        case 'PA': return "Panama";
	        case 'PE': return "Peru";
	        case 'PF': return "French Polynesia";
	        case 'PG': return "Papua New Guinea";
	        case 'PH': return "Philippines";
	        case 'PK': return "Pakistan";
	        case 'PL': return "Poland";
	        case 'PM': return "Saint Pierre and Miquelon";
	        case 'PN': return "Pitcairn";
	        case 'PR': return "Puerto Rico";
	        case 'PS': return "Palestine, State of";
	        case 'PT': return "Portugal";
	        case 'PW': return "Palau";
	        case 'PY': return "Paraguay";
	        case 'QA': return "Qatar";
	        case 'RE': return "Réunion";
	        case 'RO': return "Romania";
	        case 'RS': return "Serbia";
	        case 'RU': return "Russian Federation";
	        case 'RW': return "Rwanda";
	        case 'SA': return "Saudi Arabia";
	        case 'SB': return "Solomon Islands";
	        case 'SC': return "Seychelles";
	        case 'SD': return "Sudan";
	        case 'SE': return "Sweden";
	        case 'SG': return "Singapore";
	        case 'SH': return "Saint Helena, Ascension and Tristan da Cunha";
	        case 'SI': return "Slovenia";
	        case 'SJ': return "Svalbard and Jan Mayen";
	        case 'SK': return "Slovakia";
	        case 'SL': return "Sierra Leone";
	        case 'SM': return "San Marino";
	        case 'SN': return "Senegal";
	        case 'SO': return "Somalia";
	        case 'SR': return "Suriname";
	        case 'SS': return "South Sudan";
	        case 'ST': return "Sao Tome and Principe";
	        case 'SV': return "El Salvador";
	        case 'SX': return "Sint Maarten (Dutch part)";
	        case 'SY': return "Syrian Arab Republic";
	        case 'SZ': return "Swaziland";
	        case 'TC': return "Turks and Caicos Islands";
	        case 'TD': return "Chad";
	        case 'TF': return "French Southern Territories";
	        case 'TG': return "Togo";
	        case 'TH': return "Thailand";
	        case 'TJ': return "Tajikistan";
	        case 'TK': return "Tokelau";
	        case 'TL': return "Timor-Leste";
	        case 'TM': return "Turkmenistan";
	        case 'TN': return "Tunisia";
	        case 'TO': return "Tonga";
	        case 'TR': return "Turkey";
	        case 'TT': return "Trinidad and Tobago";
	        case 'TV': return "Tuvalu";
	        case 'TW': return "Taiwan, Province of China";
	        case 'TZ': return "Tanzania, United Republic of";
	        case 'UA': return "Ukraine";
	        case 'UG': return "Uganda";
	        case 'UM': return "United States Minor Outlying Islands";
	        case 'US': return "United States of America";
	        case 'UY': return "Uruguay";
	        case 'UZ': return "Uzbekistan";
	        case 'VA': return "Holy See";
	        case 'VC': return "Saint Vincent and the Grenadines";
	        case 'VE': return "Venezuela, Bolivarian Republic of";
	        case 'VG': return "Virgin Islands, British";
	        case 'VI': return "Virgin Islands, U.S.";
	        case 'VN': return "Viet Nam";
	        case 'VU': return "Vanuatu";
	        case 'WF': return "Wallis and Futuna";
	        case 'WS': return "Samoa";
	        case 'YE': return "Yemen";
	        case 'YT': return "Mayotte";
	        case 'ZA': return "South Africa";
	        case 'ZM': return "Zambia";
	        case 'ZW': return "Zimbabwe";
	        default  : return "Unkown: "+v;
	    }
	}

    </script>
    
    
	<style>
	    .listItem{
	        width: 100px;
	    }
	    .content{
	        padding: 3px;
	    }
	    .thumbnail{
	        height: 75px;
	    }
	    .thumbImg{
	        position: absolute;
	        bottom: 0px;
	        left: 5%;
	    }
	</style>
    </head>
    <body>
        <div class="contents"><div id="chart_div"></div></div>
    </body>
</html>