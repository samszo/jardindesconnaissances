<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Générateur - Gestion</title>
    <link rel="stylesheet" type="text/css" href="../font/font-awesome/font-awesome.css" />
    <link rel="stylesheet" type="text/css" href="../css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="../css/bootstrap-treeview.min.css" >
    <link rel="stylesheet" type="text/css" href="../css/w2ui-1.5.rc1.min.css" />
    <link rel="stylesheet" type="text/css" href="../css/font-awesome.css">

    <script type="text/javascript" src="../js/d3.v5.min.js"></script>
    <script type="text/javascript" src="../js/d3-array.v2.min.js"></script>    
    <script type="text/javascript" src="../js/jquery.min.js"></script>
	<script type="text/javascript" src="../js/popper.min.js"></script>
    <script type="text/javascript" src="../js/bootstrap.min.js"></script>
    <script type="text/javascript" src="../js/bootstrap-treeview.js"></script>    
    <script type="text/javascript" src="../js/w2ui.min.js"></script>
    <script type="text/javascript" src="../js/textree.js"></script>    
    <script type="text/javascript" src="../js/menuSunburst.js"></script>    
    <script type="text/javascript" src="../js/emotionswheel.js"></script>    
  
    <style>

		/*merci à https://www.codeply.com/go/rNFv5RJJqn/bootstrap-modal-full-screen */
        .modal-full {
            min-width: 100%;
            margin: 0;
        }

        .modal-full .modal-content {
            min-height: 100vh;
        }

    </style>
  </head>
  <body>
    <div class="container-fluid" >
        <nav id="nbMain" class="navbar navbar-expand-lg navbar-dark bg-dark sticky-top">
            <a class="navbar-brand" href="#">
                <img src="../svg/logo-paragraphe-blanc.svg" alt="logo-paragraphe" style="height:40px;" />
                <span class='logoTxt'>Générateur - Gestion</span>
            </a>

            <button class="navbar-toggler" type="button" data-toggle="collapse"
                data-target="#navbarTogglerDemo02"
                aria-controls="navbarTogglerDemo02" aria-expanded="false"
                aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarCollapse">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="ddOeuvre" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Oeuvres</a>
                        <div id="ddOeuvreItem" class="dropdown-menu" aria-labelledby="ddOeuvre">
                            <a class="dropdown-item" href="#">Créer</a>
                            <div class="dropdown-divider"></div>                            
                        </div>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" id="ddUti" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">Utilisateurs</a>
                        <div class="dropdown-menu" aria-labelledby="ddUti">
                            <a class="dropdown-item" href="#">Ajouter</a>
                            <div class="dropdown-divider"></div>                            
                        </div>
                    </li>
                </ul>
                <form class="form-inline mt-2 mt-md-0">
                    <button id="uti" class="btn btn-outline-success my-2 my-sm-0" type="button"><?php echo $this->login; ?></button>
                    <button class="btn btn-outline-danger my-2 my-sm-0" onclick="deconnexion()" type="button">déconnexion</button>
                </form>
            </div>
        </nav>	

        <div class="row">
            <div class="col-12">
                <ul class="nav nav-tabs" id="myTab" role="tablist">
                    <li class="nav-item">
                        <a class="nav-link active" id="dico-tab" data-toggle="tab" href="#dico" role="tab" aria-controls="dico" aria-selected="true">Dictionnaires</a>
                    </li>
                    <li class="nav-item">
                            <a class="nav-link" id="stats-tab" data-toggle="tab" href="#stats" role="tab" aria-controls="stats" aria-selected="true">Stats</a>
                        </li>
                    </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade show active" id="dico" role="tabpanel" aria-labelledby="dico-tab">
                        <div class="row">
                            <div class="col-2">        
                                <div id="sidebarDico" style="height: 100px; width: 100%;"></div>
                            </div>
                            <div class="col-3">        
                                <div id="detailsDico" style="height: 100px; width: 100%;"></div>
                            </div>
                            <div class="col-3">
                                <div class="row">
                                    <div id="detailsItem" style="height: 100px; width: 100%;"></div>
                                </div>        
                                <div class="row">
                                    <div id="detailsGen" style="height: 100px; width: 100%;"></div>
                                </div>        
                            </div>
                            <div class="col-4">        
                                <div class="row">
                                    <div id="testerItem" style="height: 100px; width: 100%;"></div>
                                </div>        
                                <div class="row">
                                    <div id="diffuserItem" style="height: 100px; width: 100%;"></div>
                                </div>        
                            </div>
                        </div>
                </div>
                <div class="tab-pane fade" id="stats" role="tabpanel" aria-labelledby="stat-tab">
                    <div class="w2ui-field">
                        <label>Période :</label>
                        <div> <input type="dateDeb"> - <input type="dateFin"> </div>
                    </div>
                    <div id="cal-heatmap" ></div>
                    
                </div>
            </div>
        </div>

    </div>

   

    <!-- Fenêtre modale pour l'édition d'un générateur -->
    <div class="modal fade bd-example-modal-lg" id="modEditGen" tabindex="-1" role="dialog" aria-labelledby="modEditGenLabel" aria-hidden="true">
        <div class="modal-dialog modal-full" style="max-width: max-content;" role="document">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modEditGenLabel">Edition d'un texte génératif<span class="modalTitle" id="modEditGenInt"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="background-color: black;color: white;" >
                <!--
                <div class="form-group">
                    <label for="inptGenHelp">Texte du générateur</label>
                    <textarea class="form-control" id="inptGen" aria-describedby="inptGenHelp" placeholder="saisissez le texte" rows="10"></textarea>
                    <small id="inptGenHelp" class="form-text text-muted">Merci de tester avant d'enregistrer.</small>
                </div>
                -->
                <div class="row">
                    <div class="col-6">        
                        <div class="form-group">
                            <div class="row">
                            <div class="col-12">        
                                <label for="ttGen">Structure générative : </label>
                                <div id="ttGen" style="overflow:auto" ></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">        
                                    <label>Ajouter un générateur : </label>
                                    <div> <textarea style="width:100%;" aria-describedby="enumGenStructureHelp" id="enumGenStructure"></textarea> </div>
                                    <small id="enumGenStructureHelp" class="form-text text-muted">Saisissez le texte pour ajouter un générateur</small>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-12">        
                                    <label for="inptGen">Texte génératif : </label>
                                    <textarea class="form-control" id="inptGen" aria-describedby="inptGenHelp"  rows="6"></textarea>                
                                    <small id="inptGenHelp" class="form-text text-muted">Merci de tester avant d'enregistrer.</small>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-6">        
                        <div class="row">
                            <div class="col-12">                                
                                <label for="inptGene">Texte généré : </label>
                                <textarea class="form-control" id="inptGene" rows="6"></textarea>                
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">                                
                                <label for="treeGene">Arbre de génération : </label>
                                <div id="treeGene"></div>                
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                <button id="btnTestEditGen" type="button" class="btn btn-warning">Tester</button>
                <button id="btnValidEditGen" type="button" class="btn btn-primary">Enregistrer</button>
            </div>
            </div>
        </div>
    </div>

    <!-- Fenêtre modale pour le choix d'un fichier -->
    <div class="modal fade" id="modGetFic" tabindex="-1" role="dialog" aria-labelledby="modGetFicLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modGetFicLabel">Importer le fichier des données<span class="modalTitle" id="modGetFicInt"></span></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="w2ui-field">
                    <div style="margin-left: 0px;" > <input style="width:100%;" id="fileImport"> </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
                <button id="btnValidImport" type="button" class="btn btn-primary">Valider</button>
            </div>
            </div>
        </div>
    </div>



    


    <!-- Fenêtre modale pour le temps de chargement -->
    <div class="modal fade" id="modWait" tabindex="-1" role="dialog" aria-labelledby="modWaitLbl" aria-hidden="true">
        <div class="modal-dialog modal-full" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modWaitLbl">Merci de patienter...</h5>
                </div>
                <div class="modal-body" style="height: 180px;">
                    <div id="loader" style="display:block;"></div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>


    <script type="text/javascript">
    "use strict";
    var contentHeight, sidebarDico, grids, rsGen, tt,
    conjugaisons, genres = [{ id: 1, text: '\u2642' },{ id: 2, text: '\u2640' }],
    sltOeu,testsConju = [
        {'temps':'indicatif présent','codes':['011','012','013','014','015','017']}
        ,{'temps':'indicatif imparfait','codes':['021','022','023','024','025','027']}
        ,{'temps':'passé simple','codes':['031','032','033','034','035','037']}
        ,{'temps':'futur simple','codes':['041','042','043','044','045','047']}
        ,{'temps':'conditionnel présent','codes':['051','052','053','054','055','057']}
        ,{'temps':'subjonctif présent','codes':['061','062','063','064','065','067']}
        ,{'temps':'participe passé','codes':['080']}
        ,{'temps':'infinitif présent','codes':['090']}
    ];

$(function () {
    contentHeight = getContentHeight();
    getInitData();
    
    //gestion des buttons    
    $("#btnTestEditGen").click(function() {
        let val = $('#inptGen').val();
        generer({'idOeu':sltOeu.id_oeu,'txts':[val]},['#inptGene'],'test');
    });
    $("#btnValidEditGen").click(function() {
        alert( "Handler for .click() called." );
    });    

    //gestion des champs
    $("#inptGen").change(function(e) {
        initTextree();    
    });



    sidebarDico = {
        name       : 'sidebarDico',
        style      : 'height:'+contentHeight+'px;',
        topHTML    : '<div style="background-color: #eee; padding: 10px 5px; border-bottom: 1px solid silver">Liste des dictionnaires</div>',
        nodes : [],
        onClick: function(event) {
            let d = event.target.split('-');
            if(d[0]!='dicoGen' && d[0]!='dicoType'){
                showDico(d[0],d[1]);
            }
            console.log(event);
        }
    };
    grids = {'concepts':{ 
            name: 'gridDico', 
            style      : 'height:'+contentHeight+'px;',
            header: 'Concepts du dico',		
            show: { 
                header			: true,		
                toolbar			: true,
                toolbarReload   : false,
                toolbarColumns  : false,
                toolbarSearch   : true,
                toolbarAdd      : true,
                toolbarDelete   : true,
                toolbarSave		: false,
                selectColumn	: false,
                footer			: true,
            },
            columns: [         
                { field: 'recid', caption: 'ID', size: '50px', hidden:true, sortable: true, resizable: true },
                { field: 'lib', caption: 'Concept', size: '100%', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'type', caption: 'Type', size: '100px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
            ],
            multiSearch: true,
            searches: [
                { field: 'recid', caption: 'ID', type: 'text', hidden:false},
                { field: 'lib', caption: 'Concept', type: 'text', hidden:false},
                { field: 'type', caption: 'Type', type: 'text', hidden:false},
            ],				
            toolbar: {
                items: [
                    { id: 'export', type: 'button', caption: 'Exporter', icon: 'fa-file' },
                    //{ id: 'genConcept', type: 'button', caption: 'Générer', icon: 'fa-calculator' },
                ],
                onClick: function (event) {
                    if (event.target == 'export') {
                        open(urlP+'export?obj=venteISBN',"_blank")
                    }
                    if (event.target == 'genConcept') {
                        var s = w2ui['gridDico'].getSelection();
                        if(s.length){
                            generer(w2ui['gridDico'].get(s[0]));
                        }
                    }
                }
            },
            records: [],
            onSelect: function (event) {
                event.onComplete = function () {
                    var s = w2ui['gridDico'].getSelection();
                    if(s.length){
                        showDicoItem(w2ui[event.target].get(s[0]));
                        testerDicoItem(w2ui[event.target].get(s[0]));
                    }
                }
            },
            onUnselect: function (event) {
                event.onComplete = function () {
                    w2ui['gridGenDetail'].records = [];
                    w2ui['gridGenDetail'].refresh();
                }
            },	    
            onAdd: function(event) {
                console.log(event);
            }			    
        },
        'genDetails':{ 
            name: 'gridGenDetail', 
            style      : 'height:'+(contentHeight/2)+'px;',
            header: "Générateurs de l'item",		
            show: { 
                header			: true,		
                toolbar			: true,
                toolbarReload   : false,
                toolbarColumns  : false,
                toolbarSearch   : false,
                toolbarAdd      : true,
                toolbarDelete   : true,
                toolbarSave		: false,
                selectColumn	: false,
                footer			: true,
            },
            columns: [         
                { field: 'recid', caption: 'ID', size: '50px', hidden:true, sortable: true, resizable: true },
                { field: 'valeur', caption: 'Valeur', size: '100%', sortable: true, resizable: true},
            ],
            toolbar: {
                items: [
                    //{ id: 'genItem', type: 'button', caption: 'Générer', icon: 'fa-calculator' }
                    { id: 'genEdit', type: 'button', caption: 'Editer', icon: 'fa-edit' }
                ],
                onClick: function (event) {
                    if (event.target == 'genEdit') {
                        var s = w2ui['gridGenDetail'].getSelection();
                        if(s.length){
                            showEditItem(w2ui['gridGenDetail'].get(s[0]));
                        }else
                        w2alert('Veuillez sélectionner un item').ok(function () { console.log('ok'); });
                    }
                }
            },
            records: [],
            onSelect: function (event) {
                event.onComplete = function () {
                    var s = w2ui[event.target].getSelection();
                    if(s.length){
                        testerDicoItem(w2ui[event.target].get(s[0]));
                    }
                }
            },	 
            onUnselect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	    
            onAdd: function(event) {
                console.log(event);
            }			    
        },
        'aDetails':{ 
            name: 'gridADetail', 
            style      : 'height:'+(contentHeight/2)+'px;',
            header: 'Adjectifs',		
            show: { 
                header			: true,		
                toolbar			: true,
                toolbarReload   : false,
                toolbarColumns  : false,
                toolbarSearch   : false,
                toolbarAdd      : true,
                toolbarDelete   : true,
                toolbarSave		: true,
                selectColumn	: false,
                footer			: true,
            },
            columns: [         
                { field: 'recid', caption: 'ID', size: '50px', hidden:true, sortable: true, resizable: true },
                { field: 'elision', caption: 'elision', size: '50px', sortable: true, resizable: true
                    ,editable: { type: 'checkbox', style: 'text-align: center' }},
                { field: 'prefix', caption: 'prefix', size: '100%', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'f_s', caption: '\u2640', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'f_p', caption: '\u2640 \u2640', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'm_s', caption: '\u2642', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'm_p', caption: '\u2642 \u2642', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
            ],
            multiSearch: false,
            toolbar: {
                items: [
                    //{ id: 'genItem', type: 'button', caption: 'Générer', icon: 'fa-calculator' }
                ],
                onClick: function (event) {
                    if (event.target == 'genItem') {
                        open(urlP+'export?obj=venteISBN',"_blank")
                    }
                }
            },
            records: [],
            onSelect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	 
            onUnselect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	    
            onAdd: function(event) {
                console.log(event);
            }			    
        },                        
        'mDetails':{ 
            name: 'gridMDetail', 
            style      : 'height:'+(contentHeight/2)+'px;',
            header: 'Substantifs',		
            show: { 
                header			: true,		
                toolbar			: true,
                toolbarReload   : false,
                toolbarColumns  : false,
                toolbarSearch   : false,
                toolbarAdd      : true,
                toolbarDelete   : true,
                toolbarSave		: true,
                selectColumn	: false,
                footer			: true,
            },
            columns: [         
                { field: 'recid', caption: 'ID', size: '50px', hidden:true, sortable: true, resizable: true },
                { field: 'elision', caption: 'elision', size: '50px', sortable: true, resizable: true
                    ,editable: { type: 'checkbox', style: 'text-align: center' }},
                { field: 'prefix', caption: 'prefix', size: '100%', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'genre', caption: 'genre', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'select', items: genres}, 
                render: function (record, index, col_index) {
                    var html = '';
                    for (var p in genres) {
                        if (genres[p].id == this.getCellValue(index, col_index)) html = genres[p].text;
                    }
                    return html;
                }},
                { field: 's', caption: 's', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'p', caption: 'p', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'text' }},
            ],
            multiSearch: false,
            toolbar: {
                items: [
                    //{ id: 'genItem', type: 'button', caption: 'Générer', icon: 'fa-calculator' }
                ],
                onClick: function (event) {
                    if (event.target == 'genItem') {
                        open(urlP+'export?obj=venteISBN',"_blank")
                    }
                }
            },
            records: [],
            onSelect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	 
            onUnselect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	    
            onAdd: function(event) {
                console.log(event);
            }			    
        },
        'vDetails':{ 
            name: 'gridVDetail', 
            style      : 'height:'+(contentHeight/2)+'px;',
            header: 'Verbes',		
            show: { 
                header			: true,		
                toolbar			: true,
                toolbarReload   : false,
                toolbarColumns  : false,
                toolbarSearch   : false,
                toolbarAdd      : true,
                toolbarDelete   : true,
                toolbarSave		: true,
                selectColumn	: false,
                footer			: true,
            },
            columns: [         
                { field: 'recid', caption: 'ID', size: '50px', hidden:true, sortable: true, resizable: true },
                { field: 'elision', caption: 'elision', size: '50px', sortable: true, resizable: true
                    ,editable: { type: 'checkbox', style: 'text-align: center' }},
                { field: 'prefix', caption: 'prefix', size: '50%', sortable: true, resizable: true, 
                editable: { type: 'text' }},
                { field: 'id_conj', caption: 'conjugaison', size: '50%', sortable: true, resizable: true, 
                editable: { type: 'select', items: conjugaisons}, 
                render: function (record, index, col_index) {
                    var html = '';
                    for (var p in conjugaisons) {
                        if (conjugaisons[p].recid == this.getCellValue(index, col_index)) html = conjugaisons[p].modele;
                    }
                    return html;
                }},
            ],
            multiSearch: false,
            toolbar: {
                items: [
                    //{ id: 'genItem', type: 'button', caption: 'Générer', icon: 'fa-calculator' }
                ],
                onClick: function (event) {
                    if (event.target == 'genItem') {
                        open(urlP+'export?obj=venteISBN',"_blank")
                    }
                }
            },
            records: [],
            onSelect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	 
            onUnselect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	    
            onAdd: function(event) {
                console.log(event);
            }			    
        },
        'sDetails':{ 
            name: 'gridSDetail', 
            style      : 'height:'+(contentHeight/2)+'px;',
            header: 'Syntagmes',		
            show: { 
                header			: true,		
                toolbar			: true,
                toolbarReload   : false,
                toolbarColumns  : false,
                toolbarSearch   : false,
                toolbarAdd      : true,
                toolbarDelete   : true,
                toolbarSave		: true,
                selectColumn	: false,
                footer			: true,
            },
            columns: [         
                { field: 'recid', caption: 'ID', size: '50px', hidden:true, sortable: true, resizable: true },
                {hidden:true, field: 'num', caption: 'num', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'int' }},
                {hidden:true, field: 'ordre', caption: 'ordre', size: '50px', sortable: true, resizable: true, 
                editable: { type: 'int' }},
                { field: 'lib', caption: 'libellé', size: '100%', sortable: true, resizable: true, 
                    editable: { type: 'int', min: 0, max: 10000}},
            ],
            multiSearch: false,
            toolbar: {
                items: [
                    //{ id: 'genItem', type: 'button', caption: 'Générer', icon: 'fa-calculator' }
                ],
                onClick: function (event) {
                    if (event.target == 'genItem') {
                        open(urlP+'export?obj=venteISBN',"_blank")
                    }
                }
            },
            records: [],
            onSelect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	 
            onUnselect: function (event) {
                event.onComplete = function () {
                    console.log(event);
                }
            },	    
            onAdd: function(event) {
                console.log(event);
            }			    
        }                                                      
    }
});

function getInitData(){

    var urls = ['../generateur/api?v=r&o=oeuvre', '../generateur/api?v=r&o=uti', '../generateur/api?v=r&o=conj'];

    Promise.all(urls.map(url => d3.json(url))).then(function(values) {
        //console.log(values)
        initMenuOeuvre(values[0]);
        conjugaisons = values[2];
    });

    
}

function initMenuOeuvre(rs){
    d3.select('#ddOeuvreItem').selectAll('a').data(rs).enter()
        .append('a')
        .attr('id', function (d) {
            return 'mnuId_'+d['recid'];})
        .attr('class','dropdown-item')
        .html(function (d) {                            
            return d['lib'];})
        .on('click',function(s){
            showListeDico(s);
        });
}

function showListeDico(o) {
    //TODO:gérer la fin de l'affichage pour lancer ajax $('#modWait').modal('show');
    if(w2ui['sidebarDico'])w2ui['sidebarDico'].destroy();
    sltOeu = o;

    //
    $.ajax({
        url: '../generateur/api?v=r&o=dico&idOeu='+o.recid,
        dataType: "json",
        method: "GET",
        error: function (error) {
            console.log("Erreur : " + error.responseText);
            $('#modWait').modal('hide');
        },
        success: function (data) {
            //console.log(data);
            //construction de l'arbre des dicos
            var gDico = Array.from(d3.group(data, d => d.general, d => d.type));
            var nodes = [];
            gDico.forEach(function(d,i){
                var nG = { id: 'dicoGen-'+i, text: d[0] == "0" ? "oeuvres" : "généraux" , img: 'fa-home', expanded: true, group: true, nodes: []};
                var arrT = Array.from(d[1]);
                arrT.forEach(function(t,j){
                    var nT = { id: 'dicoType-'+i+'-'+j, text: t[0], img: 'icon-folder', expanded: true, nodes: []};
                    t[1].forEach(function(dic){
                        nT.nodes.push({ id: dic.type+'-'+dic.recid, text: dic.nom, img: 'fa-star-empty'})
                    })
                    nG.nodes.push(nT);
                })
                nodes.push(nG);
                
            });
            sidebarDico.nodes = nodes;
            $('#sidebarDico').w2sidebar(sidebarDico);
            //$('#modWait').modal('hide');
        }
    });
}

function showDico(type, id) {
    //TODO:gérer la fin de l'affichage pour lancer ajax $('#modWait').modal('show');
    //initialise les grids
    if(w2ui[grids[type].name])w2ui[grids[type].name].destroy();
    if(w2ui[grids['aDetails'].name])w2ui[grids['aDetails'].name].destroy();
    if(w2ui[grids['mDetails'].name])w2ui[grids['mDetails'].name].destroy();
    if(w2ui[grids['sDetails'].name])w2ui[grids['sDetails'].name].destroy();
    if(w2ui[grids['vDetails'].name])w2ui[grids['vDetails'].name].destroy();
    if(w2ui[grids['genDetails'].name])w2ui[grids['genDetails'].name].destroy();
    d3.select('#testerItem').selectAll('.card').remove();  

    
    //
    $.ajax({
        url: '../generateur/api?v=r&o=dico&idDico='+id+'&type='+type,
        dataType: "json",
        method: "GET",
        error: function (error) {
            console.log("Erreur : " + error.responseText);
            $('#modWait').modal('hide');
        },
        success: function (data) {
            //console.log(data);
            //construction du grid des concepts                      
            grids[type].records = data;
            $('#detailsDico').w2grid(grids[type]);

            //$('#modWait').modal('hide');
        }
    });
}

function showDicoItem(item) {
    let typeGrid = item.type =='a' || item.type=='m' || item.type=='s' || item.type=='v' ? item.type : 'm';
    if(grids[typeGrid+'Details'] && w2ui[grids[typeGrid+'Details'].name])w2ui[grids[typeGrid+'Details'].name].destroy();
    if(w2ui[grids['genDetails'].name])w2ui[grids['genDetails'].name].destroy();

    //
    $.ajax({
        url: '../generateur/api?v=r&o=dico&idConcept='+item.recid+'&type='+item.type ,
        dataType: "json",
        method: "GET",
        error: function (error) {
            console.log("Erreur : " + error.responseText);
            $('#modWait').modal('hide');
        },
        success: function (data) {
            //console.log(data);
            //affichage des grid
            //ATTENTION POUR NEW si grid abscent
            if(data[item.type] && data[item.type].length && data['gen'].length){
                d3.select('#detailsItem').style('display','block');                
                grids[typeGrid+'Details'].style = 'height:'+(contentHeight/2)+'px;';                
                d3.select('#detailsGen').style('display','block');                
                grids['genDetails'].style = 'height:'+(contentHeight/2)+'px;';                
            }else if(data[item.type] && data[item.type].length && !data['gen'].length){
                d3.select('#detailsItem').style('display','block');                
                grids[typeGrid+'Details'].style = 'height:'+(contentHeight)+'px;';                
                d3.select('#detailsGen').style('display','none');                
            }else if((!data[item.type] || !data[item.type].length) && data['gen'].length){
                d3.select('#detailsItem').style('display','none');                
                d3.select('#detailsGen').style('display','block');                
                grids['genDetails'].style = 'height:'+(contentHeight)+'px;';                
            }
            //construction des grids
            if(typeGrid=='a' || typeGrid=='m' || typeGrid=='s' || typeGrid=='v'){
                grids[typeGrid+'Details'].records = data[item.type];
                $('#detailsItem').w2grid(grids[typeGrid+'Details']);
            }
            grids['genDetails'].records = data['gen'];
            $('#detailsGen').w2grid(grids['genDetails']);
            
            //$('#modWait').modal('hide');
        }
    });
}

function testerDicoItem(item) {

    //suppression de l'ancienne interface
    d3.select('#testerItem').selectAll('.card').remove();  
    //initialisation de la card de test
    var html ='<div class="card">'
            + '<div class="card-header">'
            + 'TESTER / VERIFIER'
            + '</div>'
            + '<div id="cardTest" class="card-body">'                      
            + '</div>'
            + '</div>';
    d3.select('#testerItem').html(html);                        

    //création de l'interface de test
    switch (item.type) {
        case 'm':
            html = '<div class="input-group mb-3">'
            + '<div class="input-group-prepend">'
            + '<span class="input-group-text" id="m_s">singulier</span>'
            + '</div>'
            + '<input id="m_s_v" type="text" class="form-control" aria-describedby="m_s" value="[12|m_'+item.lib+']">'
            + '<div id="m_s_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>'
            + '<div class="input-group mb-3">'
            + '<div class="input-group-prepend">'
            + '<span class="input-group-text" id="m_p">pluriel</span>'
            + '</div>'
            + '<input id="m_p_v"  type="text" class="form-control" aria-describedby="m_p" value="[62|m_'+item.lib+']">'
            + '<div id="m_p_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>';
            d3.select('#cardTest').html(html);                        
            break;    
        case 's':
            html = '<div class="input-group mb-3">'
            + '<input id="s_v" type="text" class="form-control" value="[s_'+item.lib+']">'
            + '<div id="s_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>';
            d3.select('#cardTest').html(html);                        
            break;    
        case 'a':
            html = '<div class="input-group mb-3">'
            + '<div class="input-group-prepend">'
            + '<span class="input-group-text" id="a_fs">'+genres[1].text+'</span>'
            + '</div>'
            + '<input id="a_fs_v" type="text" class="form-control" aria-describedby="a_fs" value="[32|m_phrase] [a_'+item.lib+']">'
            + '<div id="a_fs_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>'
            + '<div class="input-group mb-3">'
            + '<div class="input-group-prepend">'
            + '<span class="input-group-text" id="a_fp">'+genres[1].text+' '+genres[1].text+'</span>'
            + '</div>'
            + '<input id="a_fp_v" type="text" class="form-control" aria-describedby="a_fp" value="[82|m_phrase] [a_'+item.lib+']">'
            + '<div id="a_fp_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>'
            + '<div class="input-group mb-3">'
            + '<div class="input-group-prepend">'
            + '<span class="input-group-text" id="a_ms">'+genres[0].text+'</span>'
            + '</div>'
            + '<input id="a_ms_v" type="text" class="form-control" aria-describedby="a_ms" value="[32|m_mot] [a_'+item.lib+']">'
            + '<div id="a_ms_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>'
            + '<div class="input-group mb-3">'
            + '<div class="input-group-prepend">'
            + '<span class="input-group-text" id="a_mp">'+genres[0].text+' '+genres[0].text+'</span>'
            + '</div>'
            + '<input id="a_mp_v" type="text" class="form-control" aria-describedby="a_mp" value="[82|m_mot] [a_'+item.lib+']">'
            + '<div id="a_mp_fb" style="display:block;" class="valid-feedback"></div>'
            + '</div>';
            d3.select('#cardTest').html(html);                        
            break; 
        case 'v':
            let test = d3.select('#cardTest').append('nav');
            let navtabs = test.append('div')
                .attr('class',"nav nav-tabs")
                .attr('id',"test-v-tab")
                .attr('role',"tablist");
            navtabs.selectAll('a').data(testsConju).enter()
                .append('a')
                .attr('class',function(d,i){return i ? "nav-item nav-link" : "nav-item nav-link active"})
                .attr('id',function(d,i){return "test-v-"+i+"-tab"})
                .attr('data-toggle',"tab")
                .attr('href',function(d,i){return "#test-v-"+i})
                .attr('role',"tab")
                .attr('aria-controls',function(d,i){return "#test-v-"+i})
                .attr('aria-selected',function(d,i){return i ? false : true})
                .html(d=>d.temps);
            let tabs = test.append('div')
                .attr('class',"tab-content")
                .attr('id',"test-v-tabContent");
            let content = tabs.selectAll('div').data(testsConju).enter()
                .append('div')
                .attr('class',function(d,i){return i ? "tab-pane fade show" : "tab-pane fade show active"})
                .attr('id',function(d,i){return "test-v-"+i})
                .attr('role',"tabpanel")
                .attr('aria-labelledby',function(d,i){return "test-v-"+i+"-tab"})
                .append('div')
                    .attr('class','container-fluid');
            let rows = content.selectAll('div').data(d=>d.codes).enter()
                .append('div')
                .attr('class','row')
                .style('margin-top','5px')
                .style('margin-bottom','5px');
            //ajoute les input
            rows.append('div')    
                .attr('class','col-8').html(function(d){
                    return '<input id="test-v-'+d+'" type="text" class="form-control" value="['+d+'000000|v_'+item.lib+']">';
                });
            //ajoute les result
            rows.append('div')    
                .attr('class','col_4').html(function(d){
                    return '<div id="test-v-'+d+'-fb" style="display:block;" class="valid-feedback"></div>';
                });
            break;    
        default:
            let val = item.valeur ? item.valeur : item.type == 'carac' ? '['+item.type+item.lib+']' : '['+item.type+'-'+item.lib+']';  
            html = '<div class="input-group mb-3">'
                + '<input id="gen_v" type="text" class="form-control" value="'+val+'">'
                + '<div id="gen_fb" style="display:block;" class="valid-feedback"></div>'
                + '</div>';
                d3.select('#cardTest').html(html);                        
            break;
    }
    //ajoute les boutons de test et de vérification
    d3.select('#cardTest').selectAll('button').data([item,item]).enter()
        .append('button')
        .attr('type','button')
        .attr('class',function(d,i){return i ? 'btn btn-warning' : 'btn btn-primary'})
        .html(function(d,i){return i ? 'Vérifier' : 'Tester'})
        .on('click',function(d,i){
            if(i) genererVerif(d);
            else genererTest(d);
        });

}


function getContentHeight(){
    return window.innerHeight 
        - document.getElementById('myTab').clientHeight 
        - document.getElementById('nbMain').clientHeight;
}

function genererTest(d){
    console.log(d);
    let txt, dest;
    $('#modWait').modal('show');

    switch (d.type) {
        case 'm':
            txt = [$('#m_s_v').val(),$('#m_p_v').val()];
            generer({'idOeu':sltOeu.id_oeu,'txts':txt},['#m_s_fb','#m_p_fb'],'test');
            break;    
        case 's':
            txt = [$('#s_v').val()];
            generer({'idOeu':sltOeu.id_oeu,'txts':txt},['#s_fb'],'test');
            break;    
        case 'a':
            txt = [$('#a_fs_v').val(),$('#a_fp_v').val(),$('#a_ms_v').val(),$('#a_mp_v').val()];
            generer({'idOeu':sltOeu.id_oeu,'txts':txt},['#a_fs_fb','#a_fp_fb','#a_ms_fb','#a_mp_fb'],'test');
            break;    
        case 'v':
            txt = [],dest=[];
            testsConju.forEach(t => {
                t.codes.forEach(c =>{
                    txt.push($('#test-v-'+c).val());    
                    dest.push('#test-v-'+c+'-fb');    
                })
            })
            generer({'idOeu':sltOeu.id_oeu,'txts':txt},dest,'test');
            break;    
        default:
            txt = [$('#gen_v').val()];
            generer({'idOeu':sltOeu.id_oeu,'txts':txt},['#gen_fb'],'test');
            break;
    }
}
function genererVerif(d){
    console.log(d);
}
function generer(params,dest,v){
    $.ajax({
        url: '../generateur/api?v='+v ,
        dataType: "json",
        data : params,
        method: "GET",
        error: function (error) {
            console.log("Erreur : " + error.responseText);
            $('#modWait').modal('hide');
        },
        success: function (data) {
            if(Array.isArray(dest)){
                for (let i = 0; i < dest.length; i++) {
                    $(dest[i]).html(data[i].text);
                }
            }else{
                let txt="";
                data.forEach(t=>txt+=t.txt);
                $(dest).html(txt);
            }
            $('#modWait').modal('hide');
        },
        always:function(){
            $('#modWait').modal('hide');
        } 
    });
}
function showEditItem(idOeu, i){

    
    $('#modEditGen').modal('show');

    $('#enumGenStructure').w2field('enum', {
        url: '../generateur/api?v=enum&idOeu='+idOeu,
        renderItem: function (item) {
            return item.text + ' (' + item.type + ')';
        },
        renderDrop: function (item) {
            return item.text + ' (' + item.type + ')';
        },
        /*
        compare: function (item, search) {
            var match = false;
            var re1 = new RegExp(search, 'i');
            if(re1.test(item.text)) match = true;
            return match;
        },
        */
        onAdd: function (event) {
            if (Math.random() > 0.8) {
                event.item.style = 'background-color: rgb(255, 232, 232); border: 1px solid red;';
            }
            //ajoute au texte génératif
            let val = $('#inptGen').val();
            $('#inptGen').val(val+"["+event.item.type+"-"+event.item.text+"]");
        },        
    });
    
    //récupère la structure du texte
    $('#inptGen').val(i.valeur);
    initTextree();    

    //ajoute les structures du texte
    //$('#enumGenStructure').w2field().set([{ id: 1, text: 'Some text', type: 'Some text'}]);    
    
}

function initTextree(){
    tt = new textree({'text':$('#inptGen').val(),'idCont':'ttGen','idContMenu':'modEditGen','langage':'gen','fontSize':12});  
}

//pour tester
sltOeu = {'id_oeu':2};
showEditItem(sltOeu.id_oeu,{recid: "185016",id_gen: "185016",id_dico: "99",valeur: "Un bon test. Qui marche. [0|caract1] [0|caract2]%%[thl-présente-01].FF J'espère ! Vraiment beaucoup."});

    </script>
  </body>
</html>