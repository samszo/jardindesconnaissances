<!DOCTYPE html>
<html lang="fr">

<head>
    <title>Enregistrement audio</title>

    <script src="../js/webrtc/MediaStreamRecorder.js"></script>
    <!-- for Edige/FF/Chrome/Opera/etc. getUserMedia support -->
    <script src="../js/webrtc/gumadapter.js"></script>

	<link rel="stylesheet" type="text/css" href="../css/font-awesome.css" />

    <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	<style type="text/css">
		html {
		    background: #eee;
		}
		
		body {
		    font-family: '-apple-system', 'BlinkMacSystemFont', 'Segoe UI', 'Open Sans', 'Myriad', 'Arial';
		    font-size: 1.2em;
		    line-height: 1.5em;
		    margin: 0;
		}
		
		article, footer {
		    display: block;
		    max-width: 900px;
		    min-width: 360px;
		    width: 80%;
		}
		
		article {
		    background: #fff;
		    border: 1px solid;
		    border-color: #ddd #aaa #aaa #ddd;
		    margin: 2.5em auto 0 auto;
		    padding: 2em;
		}
		
		h1 {
		    margin-top: 0;
		}
		
		article p:first-of-type {
		    margin-top: 1.6em;
		}
		
		article p:last-child {
		    margin-bottom: 0;
		}
		
		footer {
		    margin: 0 auto 2em auto;
		    text-align: center;
		}
		
		footer a {
		    color: #666;
		    font-size: inherit;
		    padding: 1em;
		    text-decoration: none;
		    text-shadow: 0 1px 1px #fff;
		}
		
		footer a:hover, footer a:focus {
		    color: #111;
		}
		
		h1, h2 {
		    border-bottom: 1px solid rgb(189, 189, 189);
		    display: inline;
		    font-weight: normal;
		    line-height: 36px;
		    padding: 0 0 3px 0;
		}
		
		a {
		    color: #2844FA;
		    text-decoration: none;
		}
		
		a:hover, a:focus {
		    color: #1B29A4;
		}
		
		a:active {
		    color: #000;
		}
		
		:-moz-any-link:focus {
		    border: 0;
		    color: #000;
		}
		
		::selection {
		    background: #ccc;
		}
		
		::-moz-selection {
		    background: #ccc;
		}
		
	
		button {
		    background-color: white;
		    color: black;
		    border: 2px solid #555555;
		    text-align: center;
		    text-decoration: none;
		    display: inline-block;
		    -webkit-transition-duration: 0.4s; /* Safari */
		    transition-duration: 0.4s;
		    cursor: pointer;
		}
		
		button:hover {
		    background-color: #555555;
		    color: white;
		}
		button:active, input[type=button]:active {
		    background: rgb(10, 118, 190);
		}
		
		button[disabled], input[type=button][disabled] {
		    background: none;
		    border: 1px solid rgb(187, 181, 181);
		    color: gray;
		    text-shadow: none;
		}
		
		.experiment {
		    border: 1px solid rgb(189, 189, 189);
		    margin: 1em 3em;
		    border-radius: .2em;
		    text-align: left;
		}
		
		.experiment .header {
		    padding: .2em .4em;
		}
		
		.experiment .description {
		    padding: .8em 1.4em;
		}		
	</style>
</head>

<body>
    <article>
        <header style="text-align: center;">
            <h1>Enregistrement audio</h1>
        </header>

        <section class="experiment" style="padding: 5px;">
            <button class="fa fa-microphone fa-3x" id="start-recording"></button>
            <button class="fa fa-stop-circle fa-3x" id="stop-recording" disabled></button>
            <button class="fa fa-floppy-o fa-3x" id="save-recording" disabled></button>
            <button class="fa fa-database fa-3x" id="bdd-recording" disabled></button>
        </section>

        <section class="experiment">
            <div id="audios-container"></div>
        </section>

        <script>
            function captureUserMedia(mediaConstraints, successCallback, errorCallback) {
                navigator.mediaDevices.getUserMedia(mediaConstraints).then(successCallback).catch(errorCallback);
            }

            var mediaConstraints = {
                audio: true
            };

            document.querySelector('#start-recording').onclick = function() {
                this.disabled = true;
                captureUserMedia(mediaConstraints, onMediaSuccess, onMediaError);
                document.querySelector('#save-recording').disabled = true;
                document.querySelector('#bdd-recording').disabled = true;                
            };

            document.querySelector('#stop-recording').onclick = function() {
                this.disabled = true;
                mediaRecorder.stop();
                mediaRecorder.stream.stop();

                document.querySelector('#start-recording').disabled = false;
                document.querySelector('#save-recording').disabled = false;
                document.querySelector('#bdd-recording').disabled = false;
            };

            document.querySelector('#save-recording').onclick = function() {
                this.disabled = true;
                mediaRecorder.save();
                // alert('Drop WebM file on Chrome or Firefox. Both can play entire file. VLC player or other players may not work.');
            };

            var mediaRecorder;

            function onMediaSuccess(stream) {
                var audio = document.createElement('audio');

                audio = mergeProps(audio, {
                    controls: true,
                    muted: true,
                    src: URL.createObjectURL(stream)
                });
                audio.play();

                audiosContainer.appendChild(audio);
                audiosContainer.appendChild(document.createElement('hr'));

                mediaRecorder = new MediaStreamRecorder(stream);
                mediaRecorder.stream = stream;

				mediaRecorder.recorderType = StereoAudioRecorder;
                mediaRecorder.mimeType = 'audio/wav';
 
                mediaRecorder.audioChannels = 2;
                mediaRecorder.ondataavailable = function(blob) {
                		audiosContainer.innerHTML = "";
                    var a = document.createElement('a');
                    a.target = '_blank';
                    a.innerHTML = 'Taille: ' + bytesToSize(blob.size) + ' Dur√©e: ' + getTimeLength(timeInterval);

                    a.href = URL.createObjectURL(blob);

                    audiosContainer.appendChild(a);
                    audiosContainer.appendChild(document.createElement('hr'));
                };

                var timeInterval = 5 * 1000;

                // get blob after specific time interval
                mediaRecorder.start(timeInterval);

                document.querySelector('#stop-recording').disabled = false;
                //document.querySelector('#save-recording').disabled = false;
                //document.querySelector('#bdd-recording').disabled = false;
                
            }

            function onMediaError(e) {
                console.error('media error', e);
            }

            var audiosContainer = document.getElementById('audios-container');
            var index = 1;

            // below function via: http://goo.gl/B3ae8c
            function bytesToSize(bytes) {
                var k = 1000;
                var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
                if (bytes === 0) return '0 Bytes';
                var i = parseInt(Math.floor(Math.log(bytes) / Math.log(k)), 10);
                return (bytes / Math.pow(k, i)).toPrecision(3) + ' ' + sizes[i];
            }

            // below function via: http://goo.gl/6QNDcI
            function getTimeLength(milliseconds) {
                var data = new Date(milliseconds);
                return data.getUTCHours() + " heure(s) " + data.getUTCMinutes() + " minute(s) " + data.getUTCSeconds() + " seconde(s)";
            }

            window.onbeforeunload = function() {
                document.querySelector('#start-recording').disabled = false;
            };
        </script>

    </article>

    <footer>
		<div class="mercis">
			<i class="fa fa-thumbs-up"></i><a href="https://github.com/streamproc/MediaStreamRecorder" target="_blank">WebRTC</a>
			<i class="fa fa-thumbs-up"></i><a href="https://plus.google.com/+MuazKhan" target="_blank">Muaz Khan</a>
		</div>            
    </footer>
</body>

</html>