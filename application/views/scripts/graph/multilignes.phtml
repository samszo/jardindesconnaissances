<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Multilignes</title>
    <!-- 
    merci à https://bl.ocks.org/mbostock/3884955
     -->    
	<style>
	
	.axis--x path {
		display: none;
	}
	
	.line {
		fill: none;
		stroke: steelblue;
		stroke-width: 1.5px;
	}
	
	</style>
	<script src="../js/d3.v4.js"></script>
  </head>
  <body>
		
	<svg width="960" height="500"></svg>
<script>
	
	var svg = d3.select("svg"),
	margin = {top: 20, right: 80, bottom: 30, left: 50},
	width = svg.attr("width") - margin.left - margin.right,
	height = svg.attr("height") - margin.top - margin.bottom,
	g = svg.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
	
	//var parseTime = d3.timeParse("%Y%m%d");
	var parseTime = d3.timeParse('<?php echo $this->formatTemps;?>');
	
	var x = d3.scaleTime().range([0, width]),
	y = d3.scaleLinear().range([height, 0]),
	z = d3.scaleOrdinal(d3.schemeCategory10);
	
	var line = d3.line()
		.curve(d3.curveBasis)
		.x(function(d) { return x(d.date); })
		.y(function(d) { return y(d.valeur); });
	
//	var urlData =  '../data/data.tsv';
//	d3.tsv(urlData, type, function(error, data) {
	
	var urlData =  '<?php echo $this->urlData;?>';
	//le champ date = 'temps', il doit être en premier
	d3.csv(urlData, type, function(error, data) {
		if (error) throw error;
	
		var valeurs = data.columns.slice(1).map(function(id) {
			return {
				id: id,
				values: data.map(function(d) {
					return {date: d.date, valeur: d[id]};
				})
			};
		});
	
			x.domain(d3.extent(data, function(d) { return d.date; }));
	
			y.domain([
					d3.min(valeurs, function(c) { return d3.min(c.values, function(d) { return d.valeur; }); }),
					d3.max(valeurs, function(c) { return d3.max(c.values, function(d) { return d.valeur; }); })
					]);
	
			z.domain(valeurs.map(function(c) { return c.id; }));
	
			g.append("g")
				.attr("class", "axis axis--x")
				.attr("transform", "translate(0," + height + ")")
				.call(d3.axisBottom(x));
	
			g.append("g")
				.attr("class", "axis axis--y")
				.call(d3.axisLeft(y))
				.append("text")
				.attr("transform", "rotate(-90)")
				.attr("y", 6)
				.attr("dy", "0.71em")
				.attr("fill", "#000")
				.text("Quantité");
	
			var val = g.selectAll(".val")
				.data(valeurs)
				.enter().append("g")
				.attr("class", "val");
	
			val.append("path")
				.attr("class", "line")
				.attr("d", function(d) { return line(d.values); })
				.style("stroke", function(d) { return z(d.id); });
	
			val.append("text")
				.datum(function(d) { return {id: d.id, value: d.values[d.values.length - 1]}; })
				.attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.valeur) + ")"; })
				.attr("x", 3)
				.attr("dy", "0.35em")
				.style("font", "10px sans-serif")
				.text(function(d) { return d.id; });
	});				

	function type(d, _, columns) {
		d.date = parseTime(d.<?php echo $this->champTemps;?>);
		for (var i = 1, n = columns.length, c; i < n; ++i) 
			d[c = columns[i]] = +d[c];
		return d;
	}

	</script>
  </body>
</html>	