<!DOCTYPE html>
<meta charset="utf-8">
<style>
body { 
    font-family: Arial;
    background-color: black;
}
  
.axis, .axis path {
  fill: none;
  stroke: #ACB849;
}
text {
  stroke: none;
  fill: #666666;
}
</style>
<body>
  <svg id="scatter" width="500" height="500"></svg>
  
<script src="https://d3js.org/d3.v4.min.js"></script>
  
<script>
var jsonAxes = <?php echo $this->axes; ?>;
var svg = d3.select("#scatter"),
    margin = {top: 20, right: 20, bottom: 30, left: 50},
    width = +svg.attr("width"),
    height = +svg.attr("height"),
    domainwidth = width - margin.left - margin.right,
    domainheight = height - margin.top - margin.bottom;
  
var x = d3.scaleLinear()
    .domain(padExtent([-100,100]))
    .range(padExtent([0, domainwidth]));
var y = d3.scaleLinear()
    .domain(padExtent([-100,100]))
    .range(padExtent([domainheight, 0]));
  
var g = svg.append("g")
		.attr("transform", "translate(" + margin.top + "," + margin.top + ")");
  
g.append("rect")
    .attr("width", width - margin.left - margin.right)
    .attr("height", height - margin.top - margin.bottom)
    .attr("fill", "black")
    .on('mousemove',function(e){
        console.log(d3.mouse(this)[0]);
        console.log(x.invert(d3.mouse(this)[0]));
    });

d3.json("../data/quatreaxes.json", function(error, data) {
  if (error) throw error;

  data.forEach(function(d) {
      d.consequence = +d.consequence;
      d.value = +d.value;
  });
  //    
  g.selectAll("circle")
      .data(data)
    .enter().append("circle")
      .attr("class", "dot")
      .attr("r", 7)
      .attr("cx", function(d) { return x(d.consequence); })
      .attr("cy", function(d) { return y(d.value); })
    	.style("fill", function(d) {        
          if (d.value >= 3 && d.consequence <= 3) {return "#60B19C"} // Top Left
          else if (d.value >= 3 && d.consequence >= 3) {return "#8EC9DC"} // Top Right
          else if (d.value <= 3 && d.consequence >= 3) {return "#D06B47"} // Bottom Left
          else { return "#A72D73" } //Bottom Right         
      });
    //
  g.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + y.range()[0] / 2 + ")")
      .call(d3.axisBottom(x).ticks(10));

  g.append("g")
      .attr("class", "y axis")
      .attr("transform", "translate(" + x.range()[1] / 2 + ", 0)")
      .call(d3.axisLeft(y).ticks(10));

  //ajoute les titre d'axes
  g.selectAll(".txtTitreAxe")
      .data(jsonAxes)
    .enter().append("text")
      .attr("class", '.txtTitreAxe')
      .attr("transform", function(d){
        t = "rotate(0)";
        //if(d.posi=='0' || d.posi=='180' ) t = "rotate(-90)";        
        return t;
      })
      .attr("y", function(d){
        if(d.posi=='0' ) return 0;
        if(d.posi=='90' || d.posi=='270') return (height / 2);
        if(d.posi=='180') return height - margin.top - margin.right;
        })
      .attr("x",function(d){
        if(d.posi=='0' || d.posi=='180') return (width / 2)-margin.right;
        if(d.posi=='90') return width - margin.left-margin.right;
        if(d.posi=='270') return 0;
        })
    .attr("text-anchor",function(d){
        if(d.posi=='0' || d.posi=='180' || d.posi=='270') return 'start';
        if(d.posi=='90') return 'end';
        })        
      .attr("dy", function(d){
        if(d.posi=='0' || d.posi=='90' || d.posi=='270') return '1em';
        if(d.posi=='180') return '-1em';
        })
      .text(function(d){
          return d.lbl;
      });       
});
  
function padExtent(e, p) {
  	if (p === undefined) p = 1;
  	return ([e[0] - p, e[1] + p]);
}
</script>
</body>