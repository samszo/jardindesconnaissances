<!DOCTYPE html>
<html>
<head>
  <meta charset="utf-8">
  <title><?php echo $this->titre;?></title>
  <script src="../js/d3.v4.js"></script>
  <script src="../js/jquery.min.js"></script>
  <script src="../js/w2ui.min.js"></script>
  <link rel="stylesheet" type="text/css" href="../css/w2ui.css" />
      
  <style>
    body { margin:0 auto;}
    h1,h2,p {
      margin:0px;
    }
    svg {
	  margin-left:auto; margin-right:auto; display:block;
    }
    
    .axis {
	  font: 10px sans-serif;
		}
    
    .axis path,
	  .axis line {
	  fill: none;
	  stroke: #000;
	  shape-rendering: crispEdges;
	}
    .tooltip {
	  position: absolute;
	  width: 300px;
	  height: 35px;
	  pointer-events: none;
	}
    #legende {
        padding:30px;
    }
  </style>
</head>

<body>
  <div id='titresViz'>
	  <h1 align="center"><?php echo $this->titre;?></h1>
	  <h2 align="center"><?php echo $this->soustitre;?></h2>
	  <div id="legende"></div>
  </div>
  <p align="center" id="viz">
	<svg></svg>  
	<!--  
    <form>
      <label><input type="radio" name="mode" value="sumBySize" checked> Size</label>
      <label><input type="radio" name="mode" value="sumByCount"> Count</label>
    </form>
    -->
  </p>
  <script>
	//affiche le message de chargement
    w2popup.open({
        width: 500,
        height: 300,
        title: 'Chargement des données',
        body: '<div class="w2ui-centered"></div>',
        showMax: false,
        showClose: false
    });
	w2popup.lock("Merci de patienter...", true);	
	var urlData = '<?php echo $this->urlData;?>', legData=[];
	var divTitreHeight = document.getElementById('titresViz').clientHeight;	
	var margin = {top: 20, right: 30, bottom: 30, left: 30};
	var width = window.innerWidth - margin.left - margin.right;
	var height = window.innerHeight - margin.top - margin.bottom - divTitreHeight;

	//merci à https://bl.ocks.org/mbostock/4063582    	
var svg = d3.select("svg").attr("width",width).attr("height",height);

var fader = function(color) { return d3.interpolateRgb(color, "#fff")(0.2); },
    color = d3.scaleOrdinal(d3.schemeCategory20.map(fader)),
    format = d3.format(",d"), root;

var treemap = d3.treemap()
    .tile(d3.treemapResquarify)
    //.tile(d3.treemapSliceDice)
    .size([width, height])
    .round(true)
    .paddingInner(1);

d3.json(urlData, function(error, data) {
  if (error) throw error;

  root = d3.hierarchy(data)
      .eachBefore(function(d) { d.data.id = (d.parent ? d.parent.data.id + "." : "") + d.data.name; })
      .sum(sumBySize)
      .sort(function(a, b) { return b.height - a.height || b.value - a.value; });

  treemap(root);

  var cell = svg.selectAll("g")
    .data(root.leaves())
    .enter().append("g")
      .attr("transform", function(d) { return "translate(" + d.x0 + "," + d.y0 + ")"; });
  cell.append("rect")
      .attr("id", function(d) { return d.data.id; })
      .attr("width", function(d) { return d.x1 - d.x0; })
      .attr("height", function(d) { return d.y1 - d.y0; })
      .attr("fill", function(d) { 
          var c = color(d.parent.data.id);
        	  legData[c] = d.parent.data.id;              
          return c; 
          });

  cell.append("clipPath")
      .attr("id", function(d) { return "clip-" + d.data.id; })
    .append("use")
      .attr("xlink:href", function(d) { return "#" + d.data.id; });

	/*
  cell.append("text")
      .attr("clip-path", function(d) { return "url(#clip-" + d.data.id + ")"; })
    .selectAll("tspan")
      .data(function(d) { 
          return d.data.name.split(/(?=[A-Z][^A-Z])/g); 
          //return d.data.idDoc.split(/(?=[A-Z][^A-Z])/g); 
          })
    .enter().append("tspan")
      .attr("x", 4)
      .attr("y", function(d, i) { return 13 + i * 10; })
      .text(function(d) { return d; });
*/
  cell.append("title")
      .text(function(d) { return d.data.id + "\n" + format(d.value); });


  /*
  d3.selectAll("input")
      .data([sumBySize, sumByCount], function(d) { return d ? d.name : this.value; })
      .on("change", changed);

  var timeout = d3.timeout(function() {
    d3.select("input[value=\"sumByCount\"]")
        .property("checked", true)
        .dispatch("change");
  }, 2000);

  function changed(sum) {
    timeout.stop();

    treemap(root.sum(sum));

        cell.transition()
            .duration(750)
            .attr("transform", function(d) { return "translate(" + d.x0 + "," + d.y0 + ")"; })
          .select("rect")
            .attr("width", function(d) { return d.x1 - d.x0; })
            .attr("height", function(d) { return d.y1 - d.y0; });
    }
   */

	  //construit la légende	
	  buildLegend();
      //supprime le message de chargement	
      w2popup.unlock();
      w2popup.close();
      
    });

function sumByCount(d) {
  return d.children ? 0 : 1;
}

function sumBySize(d) {
  return parseInt(d.size);
}

function buildLegend(){
		
	var dataLeg = []	, doublons = [];
	for (var c in legData) {
		var l = legData[c].split('.');
		dataLeg.push({'color':c,'label':l.join(' / ')});
	}		
	d3.select("#legende").selectAll("div").data(dataLeg).enter()
	.append("div")
	.html(function(d){
		return "<span style='color:"+d.color+";'>"+d.label+"</span>";
		});		
}

  </script>
</body>
</html>