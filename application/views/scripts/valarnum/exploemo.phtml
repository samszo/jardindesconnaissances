<!DOCTYPE html>
<html lang="fr">
<head>
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="IE=edge" />
<meta name="viewport"
	content="width=device-width, initial-scale=1, shrink-to-fit=no">
<title>Explorations émotionnelles des archives numériques</title>
<style>
html, body {
	height: 100%;
}

#graph {
	
}

.node {
	position: absolute;
	background-size: cover;
	border-style: none;
	border-color: red;
}

.curseur {
	position: absolute;
	width: 100px;
	height: 100px;
	left: 0px;
	top: 0px;
	z-index: 110;
}

#curseurSelect {
	font-size: 42px;
	text-align: center;
}

.choix {
	position: absolute;
	z-index: 100;
}

.choixCarousel {
	position: absolute;
	width: 100%;
	height: 100%;
	left: 0px;
	top: 0px;
	z-index: 100;
}

.carousel .item {
	height: 300px;
}

.item img {
	position: absolute;
	top: 0;
	left: 0;
	min-height: 300px;
}


div.tooltip {
  position: absolute;
  text-align: center;
  width: 200px;
  height: 200px;
  padding: 2px;
  font: 12px sans-serif;
  background: white;
  border: 0px;
  border-radius: 8px;
  pointer-events: none;
}

iframe {
    min-height: 600px;
    width: 100%;
    border: none;
}

</style>

<!-- CSS -->
<link rel="stylesheet" type="text/css" href="../font/font-awesome/font-awesome.css" />
<link rel="stylesheet" type="text/css" href="../css/bootstrap.min.css">
<script src="../js/d3.min.js"></script>
<script src="../js/jquery.min.js"></script>
<script src="../js/valarnum/flux.js"></script>
<script src="../js/w2ui.min.js"></script>
<link rel="stylesheet" type="text/css" href="../css/w2ui.css" />

<script type="text/javascript">
var uti = <?php echo $this->uti; ?>;
var idBase = '<?php echo $this->idBase; ?>';
var idMonade = '<?php echo $this->idMonade; ?>';
var prefUrl = "../"
</script>

</head>

<body>


	<div class="card text-center">
		<div class="card-header">
			<h1>Explorations émotionnelles</h1>
			<h2 class="card-title">Collections photographiques des Archives
				Nationales</h2>
			<nav class="navbar navbar-expand-lg navbar-dark bg-dark">
				<a class="navbar-brand" href="#">Menu</a>
				<button class="navbar-toggler" type="button" data-toggle="collapse"
					data-target="#navbarTogglerDemo02"
					aria-controls="navbarTogglerDemo02" aria-expanded="false"
					aria-label="Toggle navigation">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="collapse navbar-collapse" id="navbarTogglerDemo02">
					<ul class="navbar-nav mr-auto mt-2 mt-lg-0">
						<li class="nav-item"><a class="nav-link" href="../valarnum">Accueil<span
								class="sr-only">(current)</span></a></li>
						<li class="nav-item active"><a class="nav-link" href="#">Explorations
								émotionnelles</a></li>
						<li class="nav-item"><a class="nav-link" href="../valarnum/identacteurs">Identification des
								acteurs</a></li>
					</ul>
					<form class="form-inline my-2 my-lg-0">
						<button class="btn btn-outline-success my-2 my-sm-0" type="button"><?php echo $this->login; ?></button>
						<button class="btn btn-outline-danger my-2 my-sm-0" onclick="deconnexion()" type="button">déconnexion</button>
					</form>
				</div>
			</nav>				
				
			<ul class="nav nav-pills card-header-pills" id="myTab" role="tablist">
				<li class="nav-item"><a class="nav-link" id="carto-tab"
					data-toggle="tab" href="#carto" role="tab" aria-controls="carto"
					aria-selected="true">Cartographier</a></li>
				<li class="nav-item"><a class="nav-link" id="navig-tab"
					data-toggle="tab" href="#navig" role="tab" aria-controls="navig"
					aria-selected="false" >Naviguer</a></li>
				<li class="nav-item"><a class="nav-link disabled" id="story-tab"
					data-toggle="tab" href="#story" role="tab" aria-controls="story"
					aria-selected="false">Raconter</a></li>
			</ul>
		</div>

	<div class="card-body" >


		<div class="tab-content" id="myTabContent">
			<div class="tab-pane fade show active" id="carto" role="tabpanel"
				aria-labelledby="carto-tab">
				<div class="col-12 hidden-md-down" id="graph">
					<div id="curseurPalette" class="curseur"></div>
					<div id="curseurSelect" class="curseur"></div>
				</div>
			</div>
			<div class="tab-pane fade" id="navig" role="tabpanel"
				aria-labelledby="navig-tab">
				<div class="container-fluid">
				<div class="row">
        				<div class="col" >
        					<iframe id="frmStream" src=""></iframe>
        				</div>
        				<div class="col" >
            				<div id="carouselEvals" class="carousel slide" data-ride="carousel" style="text-align:-webkit-center">
            					<ol class="carousel-indicators" id="car-ind">
            					</ol>
            					<div class="carousel-inner" id="car-inn">
            					</div>
            					<a class="carousel-control-prev" href="#carouselEvals"
            						role="button" data-slide="prev"> <span
            						class="carousel-control-prev-icon" aria-hidden="true"></span> <span
            						class="sr-only">Previous</span>
            					</a> <a class="carousel-control-next" href="#carouselEvals"
            						role="button" data-slide="next"> <span
            						class="carousel-control-next-icon" aria-hidden="true"></span> <span
            						class="sr-only">Next</span>
            					</a>
            				</div>
	    				</div>
    				</div>
    				</div>
			</div>
			<div class="tab-pane fade" id="story" role="tabpanel"
				aria-labelledby="story-tab"></div>
		</div>


	</div>
	<div id="pied" class="card-footer text-muted">
        <h4>Conception &amp; réalisation : <a href="http://www.samszo@univ-paris8.fr">Samuel Szoniecky <img style="height:26px;" src="../img/logo_paragraphe.gif"></a></h4>
		<h5>Merci à : <a href="https://bl.ocks.org/shimizu/79409cca5bcc57c32ddae0a5f0a1a564">shimizu</a></h5>
	</div>

	</div>


	<script>
	//merci beaucoup à https://bl.ocks.org/shimizu/79409cca5bcc57c32ddae0a5f0a1a564
    "use strict"

    
	//affiche le message de chargement
    w2popup.open({
        width: 500,
        height: 300,
        title: 'Chargement des données',
        body: '<div class="w2ui-centered"></div>',
        showMax: false,
        showClose: false
    });
	w2popup.lock("<p>Merci de patienter...</p>", true);	
    
    var data=[], dataOmk, rdmTofs, nbTof = <?php echo $this->nbTof; ?>, q = '<?php echo $this->q; ?>';
	var url = "../flux/iiif?q="+q+"&idCol=<?php echo $this->idCol; ?>";
	url = "../flux/an?q=getAleaTofs&idBase="+idBase+"&nb=<?php echo $this->nb; ?>";
  	d3.json(url,function(dt) {
 		dataOmk=dt;
 		rdmTofs = d3.randomUniform(1, (dataOmk.length-1));
 		 		 		
        if(q != 'getCollectionFaces')setInterval(draw, 8000);

 	    draw(); 	 		
 		//supprime le message de chargement	
 		w2popup.unlock();
 		w2popup.close();
 	    
 	}); 
 	        

  	function getAleaTofs(){
  		data = [];
 		data.push(dataOmk[0]);
		//sélectionne les photos
 		for (var i = 1; i <= nbTof; i++) {
 			data[i] = clone(dataOmk[parseInt(rdmTofs())]);
 	 		//rénumérote les id
	 		data[i].id = "root."+i;
 		}
		return data;  	  	
  	}
  	
  	function clone(obj) {
  	    // Handle the 3 simple types, and null or undefined
  	    if (null == obj || "object" != typeof obj) return obj;

  	    // Handle Date
  	    if (obj instanceof Date) {
  	        var copy = new Date();
  	        copy.setTime(obj.getTime());
  	        return copy;
  	    }

  	    // Handle Array
  	    if (obj instanceof Array) {
  	        var copy = [];
  	        for (var i = 0, len = obj.length; i < len; i++) {
  	            copy[i] = clone(obj[i]);
  	        }
  	        return copy;
  	    }

  	    // Handle Object
  	    if (obj instanceof Object) {
  	        var copy = {};
  	        for (var attr in obj) {
  	            if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);
  	        }
  	        return copy;
  	    }

  	    throw new Error("Unable to copy obj! Its type isn't supported.");
  	}
  	
	/*
	Chargement du curseur palette
	*/
	var curseurData = [
	 {idG:'g4351',idText:'tspan3891',en:'ecstasy',fr:'extase',color:'#ffe854',value:0,liens:['g4341'],niv:0}
  	,{idG:'g4398',idText:'tspan3836',en:'annoyance',fr:'gêne',color:'#ff8c8c',value:0,liens:['g4666'],niv:2}
  	,{idG:'g4403',idText:'tspan3840',en:'anger',fr:'colère',color:'#ff0000',value:0,liens:['g4398'],niv:1}
  	,{idG:'g4408',idText:'tspan3844',en:'rage',fr:'rage',color:'#d40000',value:0,liens:['g4403'],niv:0}
  	,{idG:'g4341',idText:'tspan3895',en:'joy',fr:'joie',color:'#ffff54',value:0,liens:['g4346'],niv:1}
  	,{idG:'g4346',idText:'tspan3899',en:'serenity',fr:'sérénité',color:'#ffffb1',value:0,liens:['g4600'],niv:2}
  	,{idG:'g4413',idText:'tspan3903',en:'terror',fr:'terreur',color:'#008000',value:0,liens:['g4418'],niv:0}
  	,{idG:'g4418',idText:'tspan3907',en:'fear',fr:'peur',color:'#009600',value:0,liens:['g4423'],niv:1}
  	,{idG:'g4423',idText:'tspan3911',en:'apprehension',fr:'appréhension',color:'#8cc68c',value:0,liens:['g4630'],niv:2}
  	,{idG:'g4383',idText:'tspan3915',en:'admiration',fr:'adoration',color:'#00b400',value:0,liens:['g4378'],niv:0}
  	,{idG:'g4378',idText:'tspan3919',en:'trust',fr:'confiance',color:'#54ff54',value:0,liens:['g4373'],niv:1}
  	,{idG:'g4373',idText:'tspan3923',en:'acceptance',fr:'résignation',color:'#8cff8c',value:0,liens:['g4613'],niv:2}
  	,{idG:'g4356',idText:'tspan3927',en:'vigilance',fr:'vigilance',color:'#ff7d00',value:0,liens:['g4388'],niv:0}
  	,{idG:'g4388',idText:'tspan3931',en:'anticipation',fr:'excitation',color:'#ffa854',value:0,liens:['g4393'],niv:1}
  	,{idG:'g4393',idText:'tspan3935',en:'interest',fr:'intérêt',color:'#ffc48c',value:0,liens:['g4675'],niv:2}
  	,{idG:'g4458',idText:'tspan3939',en:'boredom',fr:'ennui',color:'#ffc6ff',value:0,liens:['g4657'],niv:2}
  	,{idG:'g4463',idText:'tspan3943',en:'disgust',fr:'dégoût',color:'#ff54ff',value:0,liens:['g4458'],niv:1}
  	,{idG:'g4468',idText:'tspan3947',en:'loathing',fr:'aversion',color:'#de00de',value:0,liens:['g4463'],niv:0}
  	,{idG:'g4438',idText:'tspan3951',en:'amazement',fr:'stupéfaction',color:'#0089e0',value:0,liens:['g4433'],niv:0}
  	,{idG:'g4433',idText:'tspan3955',en:'surprise',fr:'surprise',color:'#59bdff',value:0,liens:['g4428'],niv:1}
  	,{idG:'g4428',idText:'tspan3959',en:'distraction',fr:'distraction',color:'#a5dbff',value:0,liens:['g4639'],niv:2}
  	,{idG:'g4448',idText:'tspan3828',en:'sadness',fr:'tristesse',color:'#5151ff',value:0,liens:['g4453'],niv:1}
  	,{idG:'g4443',idText:'tspan3832',en:'grief',fr:'chagrin',color:'#0000c8',value:0,liens:['g4448'],niv:0}
  	,{idG:'g4453',idText:'tspan3007',en:'pensiveness',fr:'songerie',color:'#8c8cff',value:0,liens:['g4648'],niv:2}  	
  	,{idG:'g4563',idText:'tspan4022',en:'disapproval',fr:'désapprobation',color:'url("#linearGradient5706")',value:0,liens:[],niv:4}
  	,{idG:'g4556',idText:'tspan4026',en:'remorse',fr:'remord',color:'url("#linearGradient5714")',value:0,liens:[],niv:4}
  	,{idG:'g4547',idText:'tspan4030',en:'contempt',fr:'mépris',color:'url("#linearGradient5722")',value:0,liens:[],niv:4}
  	,{idG:'g4542',idText:'tspan4034',en:'awe',fr:'crainte',color:'url("#linearGradient5698")',value:0,liens:[],niv:4}
  	,{idG:'g4535',idText:'tspan4038',en:'submission',fr:'soumission',color:'url("#linearGradient5690")',value:0,liens:[],niv:4}
  	,{idG:'g4568',idText:'tspan4042',en:'love',fr:'amour',color:'url("#linearGradient5682")',value:0,liens:[],niv:4}
  	,{idG:'g4506',idText:'tspan4046',en:'optimism',fr:'optimisme',color:'url("#linearGradient5674")',value:0,liens:[],niv:4}
  	,{idG:'g4523',idText:'tspan4050',en:'aggressiveness',fr:'aggressivité',color:'url("#linearGradient5730")',value:0,liens:[],niv:4}
  	,{idG:'g4666',color:'#ffc5c5',value:0,liens:['g4547','g4523'],niv:3}
  	,{idG:'g4675',color:'#ffe1c5',value:0,liens:['g4506','g4523'],niv:3}
  	,{idG:'g4600',color:'#feffdd',value:0,liens:['g4506','g4568'],niv:3}
  	,{idG:'g4613',color:'#c5ffc5',value:0,liens:['g4535','g4568'],niv:3}
  	,{idG:'g4630',color:'#c5e2c5',value:0,liens:['g4535','g4542'],niv:3}
  	,{idG:'g4639',color:'#d5eeff',value:0,liens:['g4563','g4542'],niv:3}
  	,{idG:'g4648',color:'#c5c5ff',value:0,liens:['g4563','g4556'],niv:3}
  	,{idG:'g4657',color:'#c5c5ff',value:0,liens:['g4547','g4556'],niv:3}
  	];	

	//création du lien vers le parent
	curseurData.forEach(function(p){
		p.liens.forEach(function(e){
			var ee = curseurData.filter(function(f){
				return f.idG == e;
			})[0];
			ee.parent = p;
		}) 
	});


	var divTT = d3.select("body").append("div")
	    .attr("class", "tooltip")
	    .style("opacity", 0);
	
	var onFlux=true, onSelect=false, onChoix=false, noCurseur, curSelect, rootTofs, tofSelect, tofEvalOri=[], tofEval=[], idSvg="svg3360", l, t
		, mousedownID, cChoix, rChoix = 10, wCurseur = 300, hCurseur = 300, w="715.41962", h="724.66992", padding = 30
		, svgChoix;
  
	//dimensionne la gallerie dynamique
	var pied = document.querySelector("#pied");
	var graph = document.querySelector("#graph");
    var width = graph.clientWidth;
    var height = window.innerHeight-graph.offsetTop-pied.offsetHeight-padding;
    d3.select("#carto").style("height", height+"px");
    var svgTof = d3.select("#graph").append("svg").attr("width", width).attr("height", height);
    var rdmCur = d3.randomUniform(curseurData.length-1);
	

    //ajoute le déplacement suivant la souris
	d3.select('#graph')
		.on('mousedown',function(e){
    	        //affiche les fonds des fragments
    	        d3.selectAll(".gCurseur").selectAll('path').style('fill-opacity',1);
    	  		//commence la sélection en bloquant le curseur
    	  		onSelect = true;
    	  		//stop le flux d'image
    	  		onFlux = false;
    	  		//récupère la photo de dessous par filtrage des coordonnées
    	  		//car pas trouvé le moyen de le faire sur un event de la photo
    	  		//à cause de la séparation des div entre curseur et photo
    	  		var m = d3.mouse(this);    	  		
    	  		//var m = d3.event;    	  		
    			tofSelect = rootTofs.children.filter(function(d){
        	  		return m[0] > d.x0 && m[1] > d.y0 && m[0] < d.x1 && m[1] < d.y1;
        	  		//return m.x > d.x0 && m.y > d.y0 && m.x < d.x1 && m.y < d.y1;
    	  			})[0];
    	  		//met les bords en rouge
        	  	d3.select('#div'+tofSelect.data.idOmk).style('border-style','solid');		
			})
		.on('mousemove',function(e){
			if(onSelect)return;
			if(noCurseur)return;
			var mT = d3.mouse(this);
			var x = mT[0]-(wCurseur/2);
	        var y = mT[1]-(hCurseur/2);
	        l = x-graph.offsetLeft+(hCurseur/2)+(rChoix/2);
	        t = y+(hCurseur/2)-(rChoix);

	  		var m = d3.event;
	  		//gestion du dépassement de la zone
			if(m.x < graph.offsetLeft){
				return;
			}
			if(m.y < graph.offsetTop || m.y > (graph.offsetTop+graph.clientHeight)){
				return;
			}
				
  			d3.select("#curseurPalette")
                .style("left",  x + "px")
                .style("top", y + "px");
  			d3.select("#curseurSelect")
    	            .style("width", wCurseur+"px")
    	            .style("left", x+"px")
    	            .style("top", (y-42) +"px");
                
		});
    
    function showCurseurFragment(){
		if(onSelect)return;
        //cache les fonds des fragments
        d3.selectAll(".gCurseur").selectAll('path').style('fill-opacity',0);
 		//affiche un fragment aléatoire
        	curSelect = 	curseurData[parseInt(rdmCur())];
        d3.select("#"+curSelect.o.idG).selectAll('path').style('fill-opacity',1);
        showCurseurText(curSelect);        	        
    }

    function showCurseurText(d){
		//récupère la position du curseur
		var cP = d3.select("#curseurPalette");
        
  		//affiche le texte du curseur
		d3.select("#curseurSelect")
			.style('color',d.o.color)
        	    .text(d.o.fr);        
    }
        
    function draw() {

		//vérifie s'il faut stopper le flux
		if(!onFlux)return;

        //enlève les choix        
		d3.selectAll('.choix').remove();       
		
        randomize()
                
        var stratify = d3.stratify()
            .parentId(function(d) {return d.id.substring(0, d.id.lastIndexOf(".")); });

        rootTofs = stratify(data).sum(function(d) { return d.value })

        var treemap = d3.treemap()
            .tile(d3.treemapBinary)
            .size([width, height])
            .padding(1)
            .round(true);        

        treemap(rootTofs)
        drawTreemap(rootTofs)                
            
    }
    
    function randomize() {        
 		data=getAleaTofs();        
        data.filter(function(d){ return d.id !== "root"})
            .forEach(function(d){
                //modifie la taille de la photo dans le treemap
                d.value = ~~(d3.randomUniform(1, 10)()); 
            })
    }
    
    
    function drawTreemap(root) {

        var node = svgTof.selectAll(".node")
        		.data(root.children);
          
        var newNode = node.enter()
           .append("image").attr("class", "node");

        node.merge(newNode)
            .attr('id',function(d) { 
                return 'img_'+d.data.idOmkMedia 
                })
            .attr("x", function(d) { return d.x0 })
            .attr("y", function(d) { return d.y0 })
            .attr("width", function(d) { 
				d.w = (d.x1 - d.x0);
                return d.w + "px" 
                })
            .attr("height", function(d) { 
				d.h = (d.y1 - d.y0);
                return d.h + "px"
                })
            .attr("xlink:href", function(d){ 
               //console.log(d.data.img);    	                                
               return getImgIIIF(d);
               })
            .on("click",function(e){
                console.log(e);
            });
        
    }


    function getImgIIIF(d){
        //modifie la taille de la photo
        if(d.data.imgOmk){
            var minPixel = 10;
            if(q != 'getCollectionFaces'){ 
                //calcul la taille de la photo
                d.data.x = parseInt(d3.randomUniform(minPixel, d.data.w-(d.x1-d.x0))());
                d.data.w = d.w;
                d.data.y = parseInt(d3.randomUniform(minPixel, d.data.h-(d.y1-d.y0))());
                d.data.h = d.h;
                d.data.r = 0;
	            d.data.img=d.data.imgOmk+'/'+d.data.x+','+d.data.y+','+d.data.w+','+d.data.h+'/full/'+d.data.r+'/default.jpg';
            }else{
                 d.data.img=d.data.imgFull;
                 d.data.value = d.data.w*d.data.h;
            }
        }
        //console.log(d);        
		return d.data.img;
        /*
        console.log(d.img);    	                
        console.log(d.imgAleaTot);    	                
        console.log(d.imgAleaPosi);    	                
        */
        
    }
    

	d3.xml("../svg/Plutchik-wheel.svg",function(node) { 
		//return true;
  		//importe le curseur
  		var importedNode = document.importNode(node.documentElement, true);
  		d3.select("#curseurPalette").node().appendChild(importedNode);	  
  		//redimensionne  		
		var svg = d3.select("#"+idSvg).transition().duration(0)
        	    .attr("width", wCurseur)
        	    .attr("height", hCurseur)
        		.attr("viewBox","0 0 "+w+" "+h);	
        //supprime le text
	    	d3.selectAll('text').remove();

	    	//ajoute la class aux éléments du curseur
		//cache les éléments qui ne sont pas de niveau 0
        curseurData.forEach(function(c){
	        d3.select("#"+c.idG)
	        		.attr('class','gCurseur')
	        		//.style('display',c.niv > 0 ? 'none' : 'inline')
	        		.selectAll('path')
	        			//.style('stroke','none')        		
	        			//.style('fill','none');	        		
	        			.style('fill-opacity',0)
	        			.style('stroke-opacity',1)
					.style('stroke','white');
        })	
        
		//ajoute les événements
		var curseurs = d3.selectAll('.gCurseur')
  			.data(curseurData)
  			.attr("oId",function(d,i){
		  		var e = d3.select(this);
		  		//ATENTION l'ordre de cuseurData n'est pas celui de la selection
		  		//il faut donc filtrer les datas pour les réattribuer
  	  			//console.log(i+" = "+d.idG+" : "+e.attr('id'));
  	  			var dt = curseurData.filter(function(c){
  	  	  			return c.idG == e.attr('id');
  	  			})[0];
  	  			d.o = dt;
  	  			return dt.idG;
  			})
			.on('mousemove',function(e){
	  			if(!onSelect)return;
		        onChoix = true;
			})  			
	  		.on('mouseenter',function(d, i){

	  			if(!onSelect)return;

	  			var p = "NO";
				if(d.o.parent) p = d.o.parent.idG;
				console.log("ENTER = "+curSelect.o.idG+' = '+d.o.idG+' : '+ p);       	    
		  		
                	showCurseurText(d);
                    		  		
				/*Masque les élements inutiles
				if(!d.o.parent || curSelect.idG != d.o.parent.idG){
					curSelect.o.liens.forEach(function(l){
        			        if(l != d.o.idG)	d3.select("#"+l).style('display','none');
            			});
				}	  			
				//affiche les élements enfants et parent
	  			d.o.liens.forEach(function(l){
        		        	d3.select("#"+l)
            	        		.style('display','inline');		  			
	  			});
	  			if(d.o.parent)d3.select("#"+d.o.parent.idG).style('display','inline');		  			
				*/
        	    
  			})
	  		.on('mouseout',function(d, i){		  		
	  			if(!onSelect)return;	  			
	  			if(mousedownID!=-1) {  //Only stop if exists
	  			     clearInterval(mousedownID);
	  			     mousedownID=-1;
	 	  			stockeChoix(d);    	  			  				  			     
	  			}
	    	  		//supprime le texte 
	  			d3.select("#curseurSelect")
		        	    .text("");
	  			curSelect = d;	    
				console.log("OUT = "+curSelect.o.idG+' = '+d.o.idG);       	    
  			})
	  		.on('mousedown',function(d, i){
	  			if(!onChoix)return;
	  			//merci à  https://stackoverflow.com/questions/15505272/javascript-while-mousedown
	  			if(mousedownID==-1){  //Prevent multimple loops!		  			
	  				curSelect = d;
        	  			//ajoute un cercle de la couleur
        	  			cChoix = svgTof.append('circle')
        	  				.attr("class",'choix')
        	  				.attr("cx",0)
        	  				.attr("cy",rChoix)
        	  				.attr("r",rChoix)
        	  				.style('fill-opacity',0.3)       	  				
        	  				.style("fill",d.o.color)
        	  				.attr('transform', 'translate(' + l + ',' + t + ')')
        	  				;
	  			    mousedownID = setInterval(augmenteChoix, 100 /*execute every 100ms*/); 			     	  			    	  				
	  			}
	  		})
	  		.on('mouseup',function(d,i){
	  			if(!onChoix)return;
	  			if(mousedownID!=-1) {  //Only stop if exists
	  			     clearInterval(mousedownID);
	  			     mousedownID=-1;
	 	  			stockeChoix(d);    	  			  			
	  			}
  			});
		
		//lance l'animation de couleur
        setInterval(showCurseurFragment, 1000);

	  	
	});	  

	function augmenteChoix(){
		console.log('augmenteChoix '+cChoix.attr("r"));			
		//cache les fragment saufs celui slectionné
        d3.selectAll(".gCurseur").selectAll('path').style('fill-opacity',0);
        d3.select("#"+curSelect.o.idG).selectAll('path').style('fill-opacity',1);		
		cChoix.attr("r",parseInt(cChoix.attr("r"))+10);
	}
	function stockeChoix(d){
		console.log('stockeChoix');	
		if(!cChoix)return;
				
		//calcul la position du choix par rapport à l'image
		//var x = l+(wCurseur/2)-rChoix-tofSelect.x0+tofSelect.data.x
		//	, y = t+(hCurseur/2)-rChoix-tofSelect.y0+tofSelect.data.y;
		var x = l-tofSelect.x0+tofSelect.data.x
		, y = t-tofSelect.y0+tofSelect.data.y;

		//récupère l'évaluation pour la photo omk
		var to = tofEval.filter(function(d){
			return d.idOmk == tofSelect.data.idOmk
			});
		//enregistre les références de l'émotion dans la photo
		var ev = {'img':tofSelect.data.img
			,'x':tofSelect.data.x,'y':tofSelect.data.y,'w':tofSelect.data.w,'h':tofSelect.data.h
			,'cx':x,'cy':y,'r':cChoix.attr("r"),'d':d.o};
			
		//enregistre l'évaluation dans la base		
		sauveEmo(tofSelect, ev);

		
	    //stocke l'évaluation	
		if(to.length > 0){
			 to[0].evals.push(ev);
		}else{
			//création de la référence de la photo
			tofEval.push({'idOmkMedia':tofSelect.data.idOmkMedia,'idOmkItem':tofSelect.data.idOmkItem,'label':tofSelect.data.label
				,'original':tofSelect.data.original
				,'h':tofSelect.data.height,'w':tofSelect.data.width
				,'scaleX':d3.scaleLinear().domain([0, tofSelect.data.w])
				,'scaleY':d3.scaleLinear().domain([0, tofSelect.data.h])
				,'evals':[ev]
				});

		}			
		
		
		//augmente le Z-index du curseur pour que les événements soient pris en compte
		//d3.selectAll('.curseur').style('z-index',parseInt(cChoix.style("z-index"))+1);	
		//déselectionne toutes les photos
		d3.selectAll('.node').style('border-style','none');		
		tofSelect = false;
		//relache le curseur
		onSelect = false;	  			
		onChoix = false;
		onFlux = true;
	}


	function ajoutPhotosGallerie(){

		// Remove old elements as needed.
		d3.select('#car-ind').selectAll('li').remove();
		d3.select('#car-inn').selectAll('div').remove();

		
		//Ajoute la photo à la gallerie
		var li = d3.select('#car-ind').selectAll('li')
			.data(tofEval).enter().append('li')
			.attr('data-target',"#carouselEvals")	
			.attr('data-slide-to',function(d,i){return i;})
			.attr('class',function(d,i){
				if(i==0)return 'active';
				});	
		
		var items = d3.select('#car-inn').selectAll('div')
			.data(tofEval).enter().append('div')
			.attr('class',function(d,i){
				var c = 'carousel-item';
				if(i==0) c+= ' active';
				return c;
				});
		items.append('img')
			.attr('id',function(d){
				return 'carImg_'+d.idOmkMedia;
			})
			.attr('class','d-block img-fluid')
			.style('max-height',height+"px")
			.attr('src',function(d){
				return d.original;
			});
		//ajoute le descriptif
		var block = items.append('div').attr('class','carousel-caption d-none d-md-block');
		block.append('h3').text(function(d){
			return d.label;
		});
		block.append('h4').text(function(d){
			return d.idOmk;
		});
		block.append('p').append('a')
		.attr('href',function(d){
			return d.original;
		})
		.attr('target','_blank').text('original');
				
		initCarousel();
	}	

	function initCarousel(){

		//
		if(svgChoix){
			svgChoix.selectAll('rect').remove();
		}else{
			svgChoix = d3.select('#carouselEvals').append('svg')			
        		.attr('id','svgChoix')
        		.attr('class','choixCarousel')
        		.append('g').attr('id','gChoix');
		}
		//
		//ajoute les événements
		$('#carouselEvals').on('slid.bs.carousel', function (e) {
			//console.log(e);
			showTofEvals(e);
		       				  
			})

			$('.carousel').carousel();
			$('.carousel').carousel('cycle');
			$('.carousel').carousel(tofEval.length-1);		

	}


	function showTofEvals(e){

		if(!tofEval[e.to])return;
		var tEv = tofEval[e.to];		
		var carImg = d3.select("#carImg_"+tEv.idOmkMedia).node();
		tEv.scaleX.range([0, carImg.width]);
		tEv.scaleY.range([0, carImg.height]);
		  
		//récupère la définition des cercles
		var te = tEv.evals;
				  
		  //construction du rectangle de zoom
		  svgChoix.selectAll('rect').remove();
		  var evRect = svgChoix.selectAll('rect').data(te);
		  //ajoute les nouvelles évaluations
		  evRect.enter()
		  	  .append('rect')
			  .attr("width", function(d){
				  return tEv.scaleX(d.w);
				  })
                .attr("height", function(d){
                  return tEv.scaleY(d.h);
                  })
			  .attr('fill','none')
			  .attr('stroke','red')
			  .attr('transform',function(d){
				return  'translate('+(carImg.offsetLeft+tEv.scaleX(d.x))+' '+(carImg.offsetTop+tEv.scaleY(d.y))+')'
			  	});
          
		  
		  //construction des cercles d'évaluation
		  svgChoix.selectAll('circle').remove();
		  var evCirc = svgChoix.selectAll('circle').data(te);
		  evCirc.enter()
		  	  .append('circle')
		  	  .attr('cx',function(d){
			  	  return carImg.offsetLeft+tEv.scaleX(d.cx)
			  	  })
			  .attr('cy',function(d){
				  return carImg.offsetTop+tEv.scaleY(d.cy)
				  })					  
			  .attr('r',function(d){return tEv.scaleX(d.r)})
	  			  .style('fill-opacity',0.3)       	  				
			  .attr('fill',function(d){
				  return d.color;
				  })
			  .on("mouseover", function(d) {
				  /*TODO
				  divTT.transition()
			         .duration(200)
			         .style("opacity", .9);
				  divTT.html(d.d.fr)
			         .style("left", function(dt){
				         return (d3.event.pageX-d.r) + "px";
				         })
			         .style("top", (d3.event.pageY - 28) + "px");
			         */
			       })			       
		     .on("mouseout", function(d) {
				  /*TODO			     
				    	 divTT.transition()
				         .duration(500)
				         .style("opacity", 0);
		         */
		       });		
	}
	
	function sauveEmo(tof, e) {

		//récupère les référence de l'image "flux_an-flux_doc-doc_id-3538"
		var ref = tof.data.metadata.Identifier.split('-');
		var doc = {'idDoc':ref[3],'idOmkMedia':tof.data.idOmkMedia,'idOmkItem':tof.data.idOmkItem,'label':tof.data.label,'original':tof.data.original
				,'w':tof.data.width,'h':tof.data.height};		
		e.color = e.d.color;
		e.d = e.d.fr;
		e.idOmkCol = tof.data.idCol;
		var p = {'q':'emo','doc':doc,'eval':e,'idBase':ref[0]};			
	    $.ajax({
	    		url: "../valarnum/sauve",
	    		dataType: "json",
	    		data: p,
	    		method: 	"POST",
	        	error: function(error){
	        		console.log("Erreur : "+error.responseText);
	        	},            	
	        	success: function(data) {
	  			  console.log(data);
	        }
		});	        

		
	}

	function filtreEmo(d, dPosi, onClick){
		if(!onClick){
	        	//recharge les évaluations à partir des photos filtrées pour ne pas impacter le tableau original			
			getTofEval();		        				
        		return;
		}
		//console.log(d);
		//console.log(dPosi);
		//var docs = dPosi.docs.split(',');
		var docsP = dPosi.docsP.split(',');
		var p = {'q':'getEvalsMonadeHistoUti','idTag':d.key};
		$.ajax({
	    		url: "../flux/an",
	    		dataType: "json",
	    		data: p,
	    		method: 	"POST",
	        	error: function(error){
	        		console.log("Erreur : "+error.responseText);
	        	},            	
	        	success: function(dtUti) {
		        	//filtre les photo originales
		       tofEval = tofEvalOri.filter(function(dt){
		        		return docsP.indexOf(dt.idDoc);
			        	});	
		       tofEval = tofEval.filter(function(dt){
		    	   		dt.evals = dt.evals.filter(function(de){
				        	return de.d == dPosi.type;
			        	});
		        		return dt.evals.length;		        	
		        	})
		        	ajoutPhotosGallerie();		        	
	        }
		});	  		
	}
	
	var lstChoix = d3.select('#listeChoix')
		.on('mouseenter',function(d, i){
			noCurseur = true;
		})
		.on('mouseout',function(d, i){		  		
			noCurseur = false;
		})
		;

	drawLstChoix(curseurData)
    
    function drawLstChoix(lstData) {

		return true;
		
        var node = lstChoix.selectAll(".list-group-item")
        		.data(lstData);
          
        var newNode = node.enter()
           .append("div").attr("class", "list-group-item")
	  	   ;

        node.merge(newNode)
            .attr('id',function(d) { 
                return 'divList'+d.idG 
                })
            .style("background-color", function(d){ 
                return d.color;
                })
            .text(function(d){ 
                return d.fr;
            });
            
    }

    function chargeStream(){
		d3.select("#frmStream").attr('src',"<?php echo WEB_ROOT_AJAX;?>/graph/streamv?type=valarnum&idBase="+idBase+"&idMonade="+idMonade);
    }

    function getTofEval(){
        
		var p = {'q':'getEvalsMonade','idBase':idBase,'idMonade':idMonade};
		tofEval = [];			
	    $.ajax({
	    		url: "../flux/an",
	    		dataType: "json",
	    		data: p,
	    		method: 	"POST",
	        	error: function(error){
	        		console.log("Erreur : "+error.responseText);
	        	},            	
	        	success: function(data) {
		        	var idO = 0, id=-1;
		        	data.forEach(function(d){
		  			//enregistre les références de l'émotion dans la photo
		  			var e = JSON.parse(d.note);
		  			var v = JSON.parse(d.valeur);
		  			var ev = {'img':d.url, 'idDoc':d.idDoc
		  				,'x':e.x,'y':e.y,'w':e.w,'h':e.h
		  				,'cx':v.cx,'cy':v.cy,'r':v.r,'d':v.d,'color':v.color};
		  		    //stocke l'évaluation	
		  			if(idO == d.tronc){
		  				tofEval[id].evals.push(ev);
		  			}else{
		  				//création de la référence de la photo
		  				var n = JSON.parse(d.pNote);
		  				tofEval.push({'idOmkItem':n.idOmkItem,'idOmkMedia':n.idOmkMedia,'label':n.label
		  					,'idDoc':n.idDoc
		  					,'original':n.original
		  					,'h':n.h,'w':n.w
		  					,'scaleX':d3.scaleLinear().domain([0, n.w])
		  					,'scaleY':d3.scaleLinear().domain([0, n.h])
		  					,'evals':[ev]
		  					});
		  				idO = d.tronc;
		  				id++;
		  			}	  							        	
		        	})
		        	tofEvalOri = tofEval;
		        	ajoutPhotosGallerie();
		        	//fixe la fonction pour le filtrage par le streamv
	    		    document.getElementById('frmStream').contentWindow.fctClickStrealPath = filtreEmo;//fonction sur le click filtrer le détail
		        	
	        }
		});	        
    }


    $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
    	  if(e.target.innerText=="Naviguer"){
        	chargeStream();
      	getTofEval();      	  
    	  }
    	  e.relatedTarget // previous active tab
    	})
    
	</script>
	<script src="../js/popper.min.js"></script>
	<script src="../js/bootstrap.min.js"></script>
</body>
</html>