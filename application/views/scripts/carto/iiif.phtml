<!DOCTYPE html>
  <head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.css" />
    <link rel="stylesheet" href="https://cdn.rawgit.com/Leaflet/Leaflet.label/0.8/dist/leaflet.label.css" />
	<link rel="stylesheet" href="https://unpkg.com/leaflet-draw@0.4.9/dist/leaflet.draw.css" />
    <link rel="stylesheet" href="http://w2ui.com/src/w2ui-1.5.rc1.min.css" />

    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />

    <script src="http://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
    
    <script type="text/javascript" src="http://w2ui.com/src/w2ui-1.5.rc1.min.js"></script>
        
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/leaflet.js"></script>
    <script src="https://rawgit.com/mejackreed/Leaflet-IIIF/master/leaflet-iiif.js"></script>
    <script src="https://cdn.rawgit.com/Leaflet/Leaflet.label/0.8/dist/leaflet.label.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leaflet-ajax/2.1.0/leaflet.ajax.min.js"></script>    
	<script src="https://unpkg.com/leaflet-draw@0.4.9/dist/leaflet.draw.js"></script>
    		
    
    <style type="text/css">
    html, body, #map{
	  height: 100%;
	  margin: 0;
	}
	#export, #import, #save {
            position: absolute;
            top:300px;
            left:10px;
            z-index:100;
            background:white;
            color:black;
            padding:6px;
            border-radius:4px;
            font-family: 'Helvetica Neue';
            cursor: pointer;
            font-size:12px;
            text-decoration:none;
        }
        #import {
            top:340px;
        }	
        #save {
            top:380px;
        }	
	</style>
  </head>
  <body>
    <div id="map">
    </div>
    <a href='#' id='export'>Exporter</a>
    <a href='#' id='import'>Importer</a>
    <a href='#' id='save'>Enregistrer</a>
    <script type="text/javascript">
    var map;

    map = L.map('map', {
      center: [0, 0],
      crs: L.CRS.Simple,
      zoom: 0
    });
    var baseLayer;
    var annoFeatures = new L.FeatureGroup();
    map.addLayer(annoFeatures);
    
    //var urlJson = 'http://dms-data.stanford.edu/data/manifests/BnF/jr903ng8662/manifest.json';
    var urlJson = 'http://gapai.univ-paris8.fr/DesignEdition/os/iiif/31/manifest';
    var urlInfoJson = "http://gallica.bnf.fr/iiif/ark:/12148/btv1b52503224r/f1/info.json";   
    //var urlInfoJson = 'http://gapai.univ-paris8.fr/DesignEdition/os/iiif-img/33/info.json';
    $.getJSON(urlJson, function(data) {
    
      var page = data.sequences[0].canvases[0];
      console.log(page.images[0].resource.service['@id'] + '/info.json');
      baseLayer = L.tileLayer.iiif(
    		  urlInfoJson
    	      //page.images[0].resource.service['@id'] + '/info.json'
      ).addTo(map);

      /*
      $.getJSON(page.otherContent[0]['@id'], function(annoData) {
        $.each(annoData.resources, function(i, value) {
          var b = /xywh=(.*)/.exec(value.on)[1].split(',');
          var minPoint = L.point(b[0], b[1]);
          var maxPoint = L.point(parseInt(b[0]) + parseInt(b[2]), parseInt(b[1]) + parseInt(b[3]));
          var min = map.unproject(minPoint, 3);
          var max = map.unproject(maxPoint, 3);
          L.rectangle(L.latLngBounds(min, max)).bindLabel(value.resource.chars).addTo(map);
        });
      });
      */
    });

	// Initialise the FeatureGroup to store editable layers
	var drawnItems = new L.FeatureGroup();
	map.addLayer(drawnItems);

	// Initialise the draw control and pass it the FeatureGroup of editable layers
	var drawControl = new L.Control.Draw({
	  edit: {
	    featureGroup: drawnItems
	  }
	});

	map.addControl(drawControl);

	map.on(L.Draw.Event.CREATED, function (e) {

		var type = e.layerType
	  	var layer = e.layer;
		var coords = type=="marker" ? e.layer._latlng : e.layer._latlngs[0];
		  	
	  // enregistre le dessin dans un groupe qui pourra être enregistré
	  drawnItems.addLayer(layer);

	    //création du formulaire de la popup
	    //merci à https://gis.stackexchange.com/questions/144695/submit-a-form-from-within-a-leaflet-popup
		var popupContent = '<form role="form" id="form" enctype="multipart/form-data" class = "form-horizontal" onsubmit="addMarker()">'+
        '<div class="form-group">'+
            '<label class="control-label col-sm-5"><strong>Date: </strong></label>'+
            '<input type="date" placeholder="Required" id="date" name="date" class="form-control"/>'+ 
        '</div>'+
        '<div class="form-group">'+
            '<label class="control-label col-sm-5"><strong>Gender: </strong></label>'+
            '<select class="form-control" id="gender" name="gender">'+
              '<option value="Male">Male</option>'+
              '<option value="Female">Female</option>'+
              '<option value="Other">Other</option>'+
            '</select>'+ 
        '</div>'+
        '<div class="form-group">'+
            '<label class="control-label col-sm-5"><strong>Age: </strong></label>'+
            '<input type="number" min="0" class="form-control" id="age" name="age">'+ 
        '</div>'+
        //...
        '<div class="form-group">'+
            '<label class="control-label col-sm-5"><strong>Description: </strong></label>'+
            '<textarea class="form-control" rows="6" id="descrip" name="descript">...</textarea>'+
        '</div>'+
        '<input style="display: none;" type="text" id="lat" name="lat" value="'+coords.lat.toFixed(6)+'" />'+
        '<input style="display: none;" type="text" id="lng" name="lng" value="'+coords.lng.toFixed(6)+'" />'+
        '<div class="form-group">'+
          '<div style="text-align:center;" class="col-xs-4 col-xs-offset-2"><button type="button" class="btn">Cancel</button></div>'+
          '<div style="text-align:center;" class="col-xs-4"><button type="submit" value="submit" class="btn btn-primary trigger-submit">Submit</button></div>'+
        '</div>'+
        '</form>';
        layer.bindPopup(popupContent,{
	      keepInView: true,
	      closeButton: false
	      }).openPopup();	  	

	});

	/**Exporter les layers dans un json
	merci à https://bl.ocks.org/danswick/d30c44b081be31aea483
	**/
	document.getElementById('export').onclick = function(e) {
        // Extract GeoJson from featureGroup
        var data = drawnItems.toGeoJSON();

        // Stringify the GeoJson
        var convertedData = 'text/json;charset=utf-8,' + encodeURIComponent(JSON.stringify(data));

        // Create export
        document.getElementById('export').setAttribute('href', 'data:' + convertedData);
        document.getElementById('export').setAttribute('download','data.geojson');
    }	

	/**Enregistre les layers dans un json puis dans la base de données
	**/
	document.getElementById('save').onclick = function(e) {
        // Extract GeoJson from featureGroup
        var data = drawnItems.toGeoJSON();

        saveLayer(data);

    }	

	/**
	merci à 
	**/
	document.getElementById('import').onclick = function(e) {
		  var geojsonLayer = new L.GeoJSON.AJAX("../data/data1.geojson");

		  //enregistre un label
		  geojsonLayer.bindLabel('Staff Mass Storage GA', { noHide: true });

	  	/* create popup contents
    		var customPopup = "Mozilla Toronto Offices<br/><img src='http://joshuafrazier.info/images/maptime.gif' alt='maptime logo gif' width='350px'/>";
	    // specify popup options 
	    var customOptions =
	        {
	        'maxWidth': '500',
	        'className' : 'custom'
	        }	  
	  	layer.bindPopup(customPopup,customOptions);
		*/

		
		//geojsonLayer.addTo(map);
		drawnItems.addLayer(geojsonLayer);	
	}

	var prefUrl = ""
	var idBase = '<?php echo $this->idBase;?>';
	var idUti = '<?php echo $this->idUti;?>';
		
	//enregistre le document dans la base
	function saveLayer(p){
		var d = new Date();
		p.idBase = idBase;
		p.titre = "Layer : "+d.toString();
		$.post(prefUrl+"savelayer", p,
				 function(data){
			 		if(data.erreur){
			 			console.log("ERREUR:");				 		
			 			console.log(data.erreur);
			 		}else{
			 			console.log(data);				 		
			 		}					 		
				 }, "json");
	}
	
	function editDoc(){
		var p = getDocParams();
		p.idDoc = arrGraphs[lstGraph.selectedIndex].doc_id;
		$.post(prefUrl+"flux/sauvedoc", p,
				 function(data){
			 		if(data.erreur){
			 			showMessage(data.erreur);
			 		}else{
			 			getDocs();							 		
						showMessage("Graph enregistré.");
				  		diagSauvDoc.close();						 		
			 		}					 		
				 }, "json");
	}	
    
    </script>
  </body>
</html>